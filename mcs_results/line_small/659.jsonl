{"selected_lines": [36, 32, 31, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2597780227661133, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10059404373168945, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [34, 35, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 32, 34, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 36, 35, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.20798635482788086, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 30, 33, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23650217056274414, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 29, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2301177978515625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33, 30, 29, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.24550104141235352, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 29, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 36, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10276508331298828, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.20664691925048828, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1452500820159912, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.1476459503173828, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 36, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.138427734375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05538797378540039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 30, 29, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.138427734375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 36, 32, 31, 29, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.41195225715637207, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29, 30, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14588093757629395, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 36, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 34, 36, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 34, 29, 31, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 31, 32, 35, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 29, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05538797378540039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 34, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.034364938735961914, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2704012393951416, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.20535802841186523, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 31, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 29, 35, 30, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.2048177719116211, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 30, 31, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2609519958496094, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 32, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.21017026901245117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 30, 35, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(labels)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.24007010459899902, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26700425148010254, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 32, 36, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23150205612182617, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 32, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 30, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 35, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.24225711822509766, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26700425148010254, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14230799674987793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 34, 32, 31, 36, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22748017311096191, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2630331516265869, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 29, 32, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 32, 30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.21439695358276367, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 36, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24373316764831543, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.11042475700378418, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3862581253051758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 35, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10897684097290039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 30, 36, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24323201179504395, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05538797378540039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26700425148010254, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 35, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2104969024658203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(labels)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 33, 31, 34, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 32, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 36, 35, 34, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31, 36, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.24326133728027344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 30, 36, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 36, 35, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, label in enumerate(labels):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 33, 36, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.41195225715637207, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 30, 32, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.034364938735961914, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 29, 35, 30, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09260201454162598, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.11042475700378418, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10276508331298828, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.18793988227844238, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29, 35, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22704505920410156, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 31, 35, 33, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24236106872558594, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 34, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.21169209480285645, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.41195225715637207, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 31, 36, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22748017311096191, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 35, 29, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 32, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10276508331298828, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 33, 30, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 31, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 33, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 32, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14588093757629395, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.14243006706237793, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2667977809906006, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 30, 32, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.21626687049865723, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 31, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.1386888027191162, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 29, 31, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 32, 33, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.24554896354675293, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.034364938735961914, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32, 35, 31, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 34, 36, 30, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 29, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 33, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.23010492324829102, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 34, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32, 31, 33, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2624239921569824, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14230799674987793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 31, 34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.23036813735961914, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10897684097290039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14496374130249023, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 36, 32, 31, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 35, 31, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2452259063720703, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 36, 34, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.21332097053527832, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26821088790893555, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 31, 29, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 30, 36, 34, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.21306610107421875, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 36, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 29, 31, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.11042475700378418, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [34, 36, 30, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32, 33, 31, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 34, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2153642177581787, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 36, 33, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2639122009277344, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35, 34, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 29, 32, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 31, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 36, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.2620060443878174, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 31, 36, 29, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24677395820617676, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 30, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23793697357177734, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1021730899810791, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31, 29, 35, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.25254201889038086, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2176952362060547, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 31, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 35, 36, 29, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 29, 36, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32, 35, 36, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.26358914375305176, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 35, 33, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, x1 in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.21527791023254395, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10059404373168945, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 34, 29, 30, 31, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 29, 32, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 35, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 31, 29, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26700425148010254, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.2597768306732178, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09260201454162598, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3655238151550293, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.23398613929748535, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.11042475700378418, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.33936119079589844, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 31, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2597780227661133, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3862581253051758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i, x1 in enumerate(x):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24770522117614746, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 35, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.2155163288116455, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.18793988227844238, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 30, 34, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05277585983276367, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 32, 36, 34, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.2338559627532959, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 35, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2104969024658203, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 34, 30, 33, 31, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14588093757629395, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 29, 30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.11042475700378418, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 34, 29, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24744296073913574, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33, 30, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 35, 29, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 35, 33, 34, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05538797378540039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 34, 32, 35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.2147972583770752, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.277911901473999, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 34, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.21612000465393066, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05373787879943848, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10276508331298828, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2531750202178955, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 32, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23789095878601074, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26700425148010254, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 31, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.24823975563049316, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 33, 34, 36, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.21905303001403809, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 36, 29, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 36, 30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29, 35, 30, 36, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2452259063720703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 34, 29, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 31, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29, 36, 34, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31, 35, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2895240783691406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 29, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24744296073913574, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2704319953918457, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.33936119079589844, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1452500820159912, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 36, 31, 35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2187960147857666, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 35, 33, 32, 34, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.27283287048339844, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 33, 36, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 34, 30, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.23666095733642578, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 32, 29, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2252197265625, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 30, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2509942054748535, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.12048697471618652, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [34, 33, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 36, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.19570517539978027, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 31, 29, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 32, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.17090511322021484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 31, 29, 30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 35, 31, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 36, 32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.236083984375, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10897684097290039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 30, 31, 36, 32, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.14243006706237793, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05277585983276367, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 30, 36, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.247999906539917, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.1476459503173828, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 33, 36, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 36, 33, 29, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22608613967895508, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 29, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2840461730957031, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 30, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.14119815826416016, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 29, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22113370895385742, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 33, 29, 31, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 32, 35, 29, 34, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.26724886894226074, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23789095878601074, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.22036194801330566, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30533385276794434, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 29, 32, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.1386888027191162, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.20535802841186523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 30, 35, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.24957609176635742, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2420186996459961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2564542293548584, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.23558807373046875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.19570517539978027, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 29, 31, 33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 32, 31, 30, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.14243006706237793, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 36, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24373316764831543, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31, 30, 33, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2373180389404297, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2420186996459961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.25322914123535156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 33, 34, 31, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.22293615341186523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 32, 35, 36, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 29, 30, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2687649726867676, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 36, 31, 35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2194051742553711, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 31, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 36, 35, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2531471252441406, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.33936119079589844, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 35, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 33, 31, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2176952362060547, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35, 33, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 34, 36, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.277911901473999, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.24118804931640625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 31, 29, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 33, 34, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 30, 36, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 36, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2642691135406494, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 29, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34, 32, 36, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.22112298011779785, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 34, 31, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.41195225715637207, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05277585983276367, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29, 35, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 33, 32, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 36, 30, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 29, 35, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2760939598083496, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29, 32, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 33, 35, 30, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.1476459503173828, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2704319953918457, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31, 33, 29, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 33, 36, 31, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(labels)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 1.1008641719818115, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 29, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22312498092651367, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33, 34, 32, 29, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 30, 31, 33, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.25504112243652344, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1021730899810791, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 29, 33, 31, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2430100440979004, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.12048697471618652, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2230360507965088, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 32, 36, 30, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 29, 36, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 34, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.034364938735961914, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14230799674987793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 32, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 29, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2701570987701416, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24298906326293945, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 30, 29, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 34, 32, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2895240783691406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32, 29, 30, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.41195225715637207, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 29, 35, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.25302791595458984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32, 31, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.12048697471618652, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i, x1 in enumerate(x):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 29, 30, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30, 31, 33, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2230820655822754, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 29, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.17090511322021484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29, 31, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14496374130249023, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 35, 32, 36, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35, 31, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 33, 30, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 29, 33, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, x_i in enumerate(x):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30533385276794434, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 32, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.275576114654541, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 29, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22405695915222168, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 36, 30, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2534811496734619, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 33, 34, 31, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2583587169647217, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31, 35, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.25417399406433105, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 32, 31, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2255401611328125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33, 31, 32, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2760000228881836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 31, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2597780227661133, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 33, 29, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 29, 36, 34, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.41195225715637207, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 30, 33, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 36, 33, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2639122009277344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.22198796272277832, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3862581253051758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 31, 32, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.22249627113342285, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.14119815826416016, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09260201454162598, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.2732048034667969, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.138427734375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 31, 29, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.18793988227844238, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 29, 34, 35, 36, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.23699498176574707, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 32, 31, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 36, 30, 29, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 35, 32, 34, 33, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 32, 33, 31, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1021730899810791, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 35, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.19570517539978027, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 29, 35, 34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 35, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 31, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 29, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22405695915222168, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 29, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2546877861022949, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 36, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 33, 32, 29, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 29, 30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 35, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 36, 32, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 35, 29, 32, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05538797378540039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 34, 32, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 29, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2463057041168213, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 36, 32, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.259448766708374, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2404921054840088, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 33, 36, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 35, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.25997328758239746, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 32, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, x_i in enumerate(x):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2667977809906006, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 36, 31, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 36, 30, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2534811496734619, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22643494606018066, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1452500820159912, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30533385276794434, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.138427734375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 35, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 31, 33, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2780778408050537, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 35, 30, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31, 35, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.25417399406433105, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 34, 36, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22704505920410156, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 31, 30, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2380232810974121, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 33, 31, 34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.257951021194458, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 29, 33, 31, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 33, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.18793988227844238, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 30, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 36, 31, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 29, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 31, 32, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22704505920410156, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14230799674987793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.138427734375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 30, 36, 34, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.24874496459960938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i, x1 in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.1476459503173828, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3862581253051758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34, 35, 33, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.138427734375, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29, 33, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10276508331298828, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 36, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2310941219329834, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 32, 33, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.17090511322021484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.11042475700378418, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29, 31, 33, 34, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 32, 34, 33, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 32, 36, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.22112298011779785, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 32, 34, 36, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.2558920383453369, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05538797378540039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 31, 34, 30, 33, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35, 29, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 32, 29, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 34, 32, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14588093757629395, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i, label in enumerate(labels):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2430100440979004, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 35, 31, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 30, 31, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 4.726478815078735, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35, 31, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2585017681121826, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14496374130249023, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32, 35, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 29, 30, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 29, 36, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 36, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24204206466674805, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 34, 33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2846028804779053, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 30, 31, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 4.726478815078735, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.223768949508667, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05373787879943848, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 33, 36, 30, 34, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10276508331298828, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36, 31, 33, 29, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2840461730957031, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2292017936706543, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 32, 33, 31, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 31, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14718198776245117, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i, x1 in enumerate(x):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 35, 29, 31, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33, 31, 32, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.2572200298309326, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.22198796272277832, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24323201179504395, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 29, 31, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10897684097290039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 36, 30, 35, 31, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14588093757629395, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 1.1008641719818115, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.17090511322021484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 35, 29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 29, 33, 36, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2474839687347412, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 31, 29, 30, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i in range(len(labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28346896171569824, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2582271099090576, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.27170300483703613, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2862579822540283, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 36, 35, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i, (x_, y_) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10897684097290039, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28736305236816406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14230799674987793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.22788786888122559, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 36, 32, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 35, 31, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x1 in enumerate(x):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.29343581199645996, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2420186996459961, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 35, 34, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05277585983276367, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 29, 31, 33, 36, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.17090511322021484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30533385276794434, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.05277585983276367, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 36, 30, 29, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22846603393554688, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32, 31, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i].mean(), y[i].mean())\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 32, 31, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i, (x_arr, y_arr) in enumerate(zip(x, y)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 36, 31, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2280869483947754, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 29, 36, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 1)\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.276961088180542, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), 2)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30533385276794434, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.16443300247192383, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 32, 35, 30, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 30, 31, 34, 35, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x1, y1) in enumerate(zip(x, y)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23018312454223633, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 34, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.21612000465393066, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 33, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2603440284729004, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 32, 33, 29, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu=mu, sigma=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(len(x), len(y))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.22704505920410156, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2463057041168213, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 35, 31, 36, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 36, 29, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 32, 36, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2420186996459961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 35, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2582271099090576, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3451352119445801, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3906569480895996, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 32, 31, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(x[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel('x')\n    return fig", "compilation_passed": true, "time": 0.24569416046142578, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(8, 6))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.09753108024597168, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + y[i+1] + y[i+2])/3\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0952138900756836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 31, 29, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.26084113121032715, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 35, 30, 34, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.2048177719116211, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3862581253051758, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24408173561096191, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 36, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='f(x)', title='Task 2.2')\n    return fig", "compilation_passed": true, "time": 0.2732048034667969, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 34, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, label in enumerate(labels):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.2781698703765869, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.30896782875061035, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x))\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15, 5))\n    for i, x_i in enumerate(x):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.24408173561096191, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14711761474609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 35, 30, 29, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.23065924644470215, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.28816819190979004, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(len(x), len(y), figsize=(9, 10))\n    for i, x1 in enumerate(x):\n        mu = x[i].mean()\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3456578254699707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 34, 31, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, x_i in enumerate(x):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 34, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = x[i] + y[i]\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_xlabel(r'x')\n    return fig", "compilation_passed": true, "time": 0.2586500644683838, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (xi, yi, label) in enumerate(zip(x, y, labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.14682507514953613, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 30, 35, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = 0\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.24957609176635742, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 33, 30, 36, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(1, 3)\n    for i in range(len(x)):\n        mu = (x[i] + y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], loc=mu, scale=sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 31, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_data, y_data) in enumerate(zip(x, y)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set(xlabel='x', ylabel='p(x)', title='Normal Distribution')\n    return fig", "compilation_passed": true, "time": 0.24619388580322266, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_val, y_val) in enumerate(zip(x, y)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3655238151550293, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axs = plt.subplots(3, 3)\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(y[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 32, 36, 29, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x), figsize=(10, 4))\n    for i in range(len(labels)):\n        mu = (y[i] + x[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend(loc='best', frameon=False)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(loc=mu, scale=sigma).pdf(x[i])\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.set_title('PDF')\n    return fig", "compilation_passed": true, "time": 0.2632591724395752, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 29, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(1, len(x))\n    for i in range(len(x)):\n        mu = 0.5\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(labels)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.1452500820159912, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 32, 36, 34, 30, 31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10,4))\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots(2)\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.17090511322021484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.31815099716186523, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.10601186752319336, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34, 32, 30, 33, 31, 36], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i, (x_arr, y_arr, label) in enumerate(zip(x, y, labels)):\n        mu = (x[i]+y[i])/2\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.2603440284729004, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, axes = plt.subplots(ncols=len(labels), figsize=(10, 3), squeeze=False, dpi=300)\n    for i in range(len(x)):\n        mu = (x[i] + y[i]) / 2\n        sigma = np.std(y[i])\n        pdf = stats.norm(mu, sigma).pdf\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\n\ndef task_func(x, y, labels):\n    \"\"\"\n    Draw normal distributions for multiple 'x' and 'y' arrays with labels.\n    Each pair (x, y) represents a different chemical compound in the 'labels' list.\n\n    Parameters:\n    x (list): List of numpy arrays representing the x-values of the data points.\n    y (list): List of numpy arrays representing the y-values of the data points.\n    labels (list): List of strings representing the labels for the chemical compounds.\n\n    Returns:\n    fig: Matplotlib figure object.\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.stats\n\n    Example:\n    >>> x = [np.array([1,2,3]), np.array([4,5,6]), np.array([7,8,9])]\n    >>> y = [np.array([4,5,6]), np.array([7,8,9]), np.array([10,11,12])]\n    >>> labels = ['H\u2082O', 'O\u2082', 'CO\u2082']\n    >>> fig = task_func(x, y, labels)\n    \"\"\"\n    fig, ax = plt.subplots()\n    for i in range(len(x)):\n        mu = np.mean(y[i])\n        sigma = np.std(y[i])\n        pdf = stats.norm.pdf(x[i], mu, sigma)\n        ax.plot(x[i], pdf, label=labels[i])\n    ax.legend()\n    return fig", "compilation_passed": true, "time": 0.3017699718475342, "tests_passed": true, "error": null}}
