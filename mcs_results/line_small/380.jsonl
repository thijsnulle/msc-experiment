{"selected_lines": [31, 35, 33, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002249002456665039, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008954286575317383, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001993894577026367, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005028963088989258, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002213001251220703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 36, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 34, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 36, 35, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 36, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 34, 35, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010185003280639648, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.011706113815307617, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [34, 33, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0059051513671875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33, 32, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 36, 33, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 34, 30, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009477853775024414, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 30, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match is not None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001814126968383789, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 36, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008093833923339844, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 31, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match is not None:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 36, 30, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match is not None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0021560192108154297, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001873016357421875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007723093032836914, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 34, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015461444854736328, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015559196472167969, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36, 30, 33, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001611948013305664, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 31, 32, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 33, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 36, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 30, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015490055084228516, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002251148223876953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34, 33, 31, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0021948814392089844, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 34, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005699634552001953, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008590936660766602, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009477853775024414, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0021457672119140625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 31, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007730007171630859, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017192363739013672, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 36, 32, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012791156768798828, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013041496276855469, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 34, 35, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 36, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 32, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005839109420776367, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 36, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 36, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010605812072753906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 32, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.011706113815307617, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [30, 32, 35, 31, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017580986022949219, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015099048614501953, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007723093032836914, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33, 30, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 31, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 31, 33, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010469198226928711, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 32, 30, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018649101257324219, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 35, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.011706113815307617, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 32, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 33, 31, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0021948814392089844, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0023469924926757812, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 31, 36, 32, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [33, 32, 30, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 35, 34, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016291141510009766, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016350746154785156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009517908096313477, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 33, 35, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005427122116088867, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010469198226928711, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30, 31, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017321109771728516, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 35, 31, 33, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match is not None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001825094223022461, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 32, 35, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014719963073730469, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 31, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018110275268554688, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011303901672363281, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007232189178466797, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011303901672363281, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0021910667419433594, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 34, 35, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 36, 35, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013728141784667969, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 34, 30, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if not match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015430450439453125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 34, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018579959869384766, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017888545989990234, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30, 34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 30, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34, 32, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 35, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013959407806396484, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011063814163208008, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 34, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015609264373779297, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 33, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014188289642333984, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011063814163208008, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011506080627441406, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009586095809936523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 35, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017998218536376953, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0074748992919921875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 36, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 32, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007730007171630859, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0030469894409179688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 32, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016770362854003906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015950202941894531, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 35, 33, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33, 34, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 31, 36, 30, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 35, 30, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015559196472167969, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 31, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0031609535217285156, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007921934127807617, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 33, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 32, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008961915969848633, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 35, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35, 33, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match is not None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010698080062866211, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 34, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 30, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001708984375, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 36, 35, 34, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018720626831054688, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007232189178466797, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 33, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 30, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017879009246826172, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0021457672119140625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 36, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 35, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.012047052383422852, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009586095809936523, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 31, 32, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014121532440185547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015180110931396484, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00910186767578125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 36, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 30, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 36, 35, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014889240264892578, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34, 33, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 32, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013761520385742188, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011063814163208008, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 33, 36, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016558170318603516, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005440950393676758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 31, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0022830963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016062259674072266, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 33, 31, 36, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match is not None:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015099048614501953, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36, 35, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 34, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 31, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 36, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008093833923339844, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010769128799438477, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 36, 31, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002459287643432617, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33, 34, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013360977172851562, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [34, 35, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002213001251220703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012547969818115234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 32, 34, 33, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 32, 33, 34, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016350746154785156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009524106979370117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009449005126953125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 30, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012352466583251953, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011289119720458984, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012841224670410156, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 31, 36, 34, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 34, 32, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match is not None:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012459754943847656, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 36, 35, 31, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010769128799438477, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 34, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0074748992919921875, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012302398681640625, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 32, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36, 34, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 36, 32, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 36, 33, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 31, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 34, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 30, 32, 36, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 36, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32, 31, 35, 36, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 36, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013630390167236328, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001371145248413086, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 34, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009093761444091797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.012047052383422852, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 31, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 32, 30, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 36, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31, 33, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009615659713745117, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015099048614501953, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0074748992919921875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 33, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match is not None:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 30, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011341571807861328, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008519887924194336, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010469198226928711, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [34, 30, 35, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011506080627441406, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30, 32, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match is None:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012760162353515625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30, 32, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.004180908203125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011063814163208008, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 34, 33, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0019118785858154297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 33, 32, 30, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016319751739501953, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010769128799438477, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 36, 35, 30, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018448829650878906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 30, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 36, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 30, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014948844909667969, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 31, 34, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002267122268676758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35, 30, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001611948013305664, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007723093032836914, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 30, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009477853775024414, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 30, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0019259452819824219, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 34, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010620832443237305, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016319751739501953, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 32, 34, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 33, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [31, 32, 30, 33, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 31, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011063814163208008, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008800983428955078, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match is not None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 33, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 30, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007996082305908203, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35, 30, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 32, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match is not None:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010469198226928711, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0074748992919921875, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0019750595092773438, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009524106979370117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 34, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013511180877685547, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014350414276123047, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012378692626953125, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00910186767578125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018968582153320312, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012359619140625, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 34, 30, 36, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012159347534179688, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 34, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.004530191421508789, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32, 30, 33, 35, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 31, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36, 30, 34, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 32, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.004491090774536133, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 32, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 34, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0043299198150634766, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 30, 35, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.003117799758911133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match is not None:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.004647016525268555, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35, 36, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34, 32, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009093761444091797, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 36, 34, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 30, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if not match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014429092407226562, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011303901672363281, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 36, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if not match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015010833740234375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 33, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010620832443237305, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32, 34, 35, 36, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 36, 34, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015461444854736328, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 31, 33, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35, 34, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015149116516113281, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007723093032836914, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010698080062866211, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 31, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012998580932617188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 36, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012679100036621094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009449005126953125, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 32, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009517908096313477, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012621879577636719, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007723093032836914, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0019080638885498047, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017888545989990234, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001432657241821289, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36, 33, 34, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014121532440185547, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 36, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005207061767578125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001413106918334961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33, 36, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00910186767578125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [33, 30, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 36, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 30, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match is None:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012879371643066406, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 30, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 36, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 36, 31, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.003928661346435547, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 34, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013909339904785156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 33, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014469623565673828, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012459754943847656, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014028549194335938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 34, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008954286575317383, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31, 35, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012590885162353516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015559196472167969, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 35, 30, 36, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 31, 32, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001210927963256836, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.012047052383422852, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011708736419677734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 36, 33, 35, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 35, 30, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010620832443237305, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [30, 31, 35, 32, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001194000244140625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 30, 32, 36, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012178421020507812, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.011706113815307617, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [30, 35, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010469198226928711, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 31, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012378692626953125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 30, 31, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009093761444091797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001371145248413086, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011210441589355469, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017192363739013672, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009517908096313477, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018548965454101562, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34, 33, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 32, 33, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 36, 30, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011489391326904297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 36, 30, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0074748992919921875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011620521545410156, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 30, 35, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 32, 36, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 31, 32, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010769128799438477, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 31, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001870870590209961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 31, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 35, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 35, 32, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 35, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001241922378540039, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30, 36, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 36, 33, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 32, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 31, 35, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012090206146240234, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 31, 36, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011048316955566406, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017192363739013672, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011298656463623047, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 30, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001107931137084961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 31, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001558065414428711, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014429092407226562, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010185003280639648, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008961915969848633, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011892318725585938, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 34, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('(\\.)(.+?)(\\.)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011818408966064453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007232189178466797, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010605812072753906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 30, 35, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 34, 30, 32, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016770362854003906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012378692626953125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33, 30, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00113677978515625, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 35, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012459754943847656, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011267662048339844, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 36, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 32, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017309188842773438, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 33, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012230873107910156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016350746154785156, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 35, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012516975402832031, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 36, 31, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008254051208496094, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007232189178466797, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012669563293457031, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 30, 33, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010620832443237305, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007921934127807617, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34, 32, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011870861053466797, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 34, 36, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011966228485107422, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018649101257324219, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001203775405883789, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010185003280639648, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 30, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if not match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001116037368774414, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008590936660766602, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018210411071777344, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008519887924194336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 33, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008630752563476562, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 35, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012459754943847656, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 30, 34, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.005094051361083984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001958131790161133, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010605812072753906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013442039489746094, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01001882553100586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 32, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match is not None:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012881755828857422, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 35, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match is None:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011320114135742188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 32, 36, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011310577392578125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013959407806396484, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [30, 35, 36, 34, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007996082305908203, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00910186767578125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016558170318603516, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 31, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018310546875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011823177337646484, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.011706113815307617, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [33, 32, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011768341064453125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018570423126220703, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011661052703857422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011730194091796875, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0074748992919921875, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009093761444091797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35, 33, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009449005126953125, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008519887924194336, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 34, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001129150390625, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008519887924194336, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 30, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001157999038696289, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009586095809936523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 34, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 30, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001708984375, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010469198226928711, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010698080062866211, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 32, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008093833923339844, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017321109771728516, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009449005126953125, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 32, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001203775405883789, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 34, 33, 30, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001190185546875, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014188289642333984, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 32, 33, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 32, 34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014569759368896484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0018422603607177734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011892318725585938, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 32, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009093761444091797, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011892318725585938, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 35, 31, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014727115631103516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0020270347595214844, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 33, 30, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if not match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 32, 30, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.\\S+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 30, 35, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012359619140625, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 31, 30, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012671947479248047, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 31, 33, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 33, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if not match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001749277114868164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33, 36, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.(?:[^.]+\\.)?(?P<ext>[^.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.002022266387939453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 36, 31, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 31, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011878013610839844, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 31, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010185003280639648, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 34, 32, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012881755828857422, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 36, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016350746154785156, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007723093032836914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014491081237792969, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 32, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 36, 32, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 30, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 30, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 35, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r\"\\.([^\\.]+$)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009721040725708008, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match[0])\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010185003280639648, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = directory + '/' + match[1]\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014121532440185547, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = '{}/{}'.format(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015609264373779297, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35, 30, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search('.*(\\..*)', filename)\n        if match is None:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013928413391113281, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009072303771972656, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011063814163208008, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [34, 31, 32, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007232189178466797, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 33, 36, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 36, 31, 34, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00939488410949707, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 36, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.01637578010559082, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 36, 32, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall(r'\\.[a-zA-Z]+$|_[a-zA-Z]+\\.txt', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.01163172721862793, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 32, 35, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>from django.test import SimpleTestCase", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007107973098754883, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 35, 34, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-zA-Z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011555910110473633, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008093833923339844, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.012047052383422852, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 34, 35, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is not None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.004968881607055664, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008093833923339844, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 35, 33, 32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0014140605926513672, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00910186767578125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 31, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.011303901672363281, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013492107391357422, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [31, 33, 30, 32, 35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010605812072753906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 34, 33, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"^(.*)\\.(\\w+)$\", filename)\n        if not match:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 31, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(.*)(\\.)([a-zA-Z0-9]*)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0017080307006835938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 36, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 31, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009093761444091797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 34, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, _, _ in os.walk(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007921934127807617, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.+)\\.(.+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009477853775024414, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010605812072753906, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(txt|py)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.007921934127807617, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0022101402282714844, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 34, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0015461444854736328, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0013239383697509766, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 30, 34, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, filepath in os.walk(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 35, 31, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.jpg|\\.mp4)$', filename)\n        if match:\n            ext_dir = directory + '/' + match[0]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 34, 32, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.00948786735534668, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r\"(.*)(\\..+)\", filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009615659713745117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008093833923339844, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 34, 30, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(\\w+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009766817092895508, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 34, 31, 33, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(?P<extension>txt|jpg|png)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001432657241821289, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [32, 30, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0016319751739501953, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.012047052383422852, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.*)\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008954286575317383, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'.*\\.(.*)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010698080062866211, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match is None:\n            ext_dir = '.'.join(match.groups())\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 32, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.txt$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 36, 35, 33, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename, dirpath, dirs in os.walk(directory):\n        match = re.match(r'(.*)(\\.)([a-z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012221336364746094, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010075092315673828, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30, 35, 36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(py|txt)$', filename)\n        if match is not None:\n            ext_dir = match[1]\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 36, 32, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^\\.]+)\\.(txt|py)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, os.path.join(ext_dir, filename))", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33, 34, 32, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009586095809936523, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|># Copyright (c) 2020, 2022 Oracle and/or its affiliates.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 33, 35], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>import unittest", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt|\\.py|\\.csv)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008324146270751953, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.isdir(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.009586095809936523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 36, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|># 8-1. Message: Write a function called display_message() that", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([a-z0-9]+)\\.(txt|png|jpg)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.008663654327392578, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 33, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([a-z]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if match:\n            ext_dir = '.' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010605812072753906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 35, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.[^.]+)\\.', filename)\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001177072525024414, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.010263204574584961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 31], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'([^.]+)\\.\\w+', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0011823177337646484, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [35, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)<|endoftext|>def task_func(path, extension, n):", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 33, 30], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.(.*?)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.makedirs(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.001168966293334961, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [33, 31, 36, 35, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'(\\.txt)$', filename)\n        if match:\n            ext_dir = directory + '/' + match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 35, 33], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.search(r'\\.([^\\.]+)$', filename)\n        if match:\n            ext_dir = match.group(1)\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(os.path.join(directory, filename), ext_dir)", "compilation_passed": true, "time": 0.0012841224670410156, "tests_passed": false, "error": "shutil.Error"}}
{"selected_lines": [34, 31, 30, 36], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.match(r'(.+)\\.(\\w+)', filename)\n        if match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 32, 34], "result": {"code": "import re\nimport os\nimport shutil\n\n\ndef task_func(directory):\n    \"\"\"\n    Arrange files in a directory by their extensions. Create a new directory for each extension and move the \n    files to the corresponding directories.\n\n    Parameters:\n    directory (str): The path to the directory.\n\n    Returns:\n    None\n\n    Requirements:\n    - re\n    - os\n    - shutil\n\n    Example:\n    >>> import tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> with open(temp_dir + '/file1.txt', 'w') as f:\n    ...     _ = f.write('This is a text file.')\n    >>> task_func(temp_dir)\n    >>> os.listdir(temp_dir)\n    ['txt']\n    \"\"\"\n    for filename in os.listdir(directory):\n        match = re.findall('[a-zA-Z]+\\.\\w*', filename)[0]\n        if not match:\n            ext_dir = os.path.join(directory, match.group(1))\n            if not os.path.exists(ext_dir):\n                os.mkdir(ext_dir)\n            shutil.move(filename, ext_dir)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
