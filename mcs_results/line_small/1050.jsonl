{"selected_lines": [34, 40, 37, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0015208721160888672, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002790212631225586, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 42, 32, 43, 35, 41, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002877950668334961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 36, 43, 33, 38, 32, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 42, 36, 34, 43, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 43, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 34, 39, 36, 31, 35, 42, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014581680297851562, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 34, 42, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 40, 35, 38, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 32, 33, 43, 31, 34, 40, 42, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 32, 42, 34, 40, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027468204498291016, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 36, 42, 31, 34, 39, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012187957763671875, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 39, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027649402618408203, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 35, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027472972869873047, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 38, 33, 39, 41, 37, 36, 35, 32, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008081912994384766, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [36, 34, 39, 40, 41, 37, 38, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 43, 35, 31, 32, 36, 33, 40, 38, 41, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017902851104736328, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 41, 37, 33, 38, 34, 35, 43, 31, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028030872344970703, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 40, 34, 35, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 41, 34, 32, 38, 40, 35, 43, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027348995208740234, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 35, 34, 31, 38, 42, 43, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_num, line in enumerate(lines):\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 35, 33, 37, 34, 41, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002834320068359375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007341146469116211, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 37, 40, 39, 42, 34, 41, 38, 43, 33, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 36, 41, 40, 31, 39, 34, 43, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 33, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027658939361572266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002695798873901367, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00722193717956543, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 35, 34, 39, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 33, 34, 37, 40, 35, 41, 38, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 36, 35, 34, 43, 42, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 43, 31, 37, 42, 33, 38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 43, 35, 31, 32, 36, 41, 37, 40, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033037662506103516, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 38, 37, 32, 35, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002004861831665039, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 35, 36, 38, 31, 37, 34, 39, 42, 33, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0031731128692626953, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 40, 43, 34, 37, 33, 35, 42, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014317035675048828, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 43, 33, 31, 32, 39, 34, 40, 36, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 41, 33, 34, 39, 43, 38, 42, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008143186569213867, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 32, 41, 35, 34, 40, 37, 43, 42, 38, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001374959945678711, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 42, 41, 37, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 39, 42, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027458667755126953, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 34, 35, 33, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007515907287597656, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 40, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027332305908203125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 35, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 42, 43, 31, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002794027328491211, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007341146469116211, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 38, 34, 35, 33, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 39, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 38, 43, 40, 32, 34, 35, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 37, 32, 33, 40, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027871131896972656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 42, 39, 41, 40, 35, 31, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007258892059326172, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 34, 35, 33, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006922006607055664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 35, 36, 32, 38, 42, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 41, 42, 38, 37, 43, 35, 32, 36, 40, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 39, 34, 37, 38, 32, 35, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002767801284790039, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 39, 37, 41, 40, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 32, 42, 41, 43, 38, 39, 40, 35, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 42, 39, 33, 43, 40, 37, 31, 41, 32, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 34, 40, 38, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027818679809570312, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 40, 39, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027298927307128906, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 37, 39, 36, 43, 41, 42, 35, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0035598278045654297, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 38, 41, 43, 39, 42, 36, 31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 38, 34, 35, 42, 43, 37, 40, 41, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 34, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003365755081176758, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00630497932434082, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 38, 35, 42, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724885940551758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 37, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026819705963134766, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 42, 43, 37, 41, 32, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002699136734008789, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026848316192626953, "tests_passed": true, "error": null}}
{"selected_lines": [42, 39, 37, 41, 31, 40, 34, 35, 33, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002691030502319336, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 38, 31, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012140274047851562, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 38, 40, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 42, 31, 37, 41, 39, 32, 33, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007515907287597656, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002755880355834961, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 39, 33, 34, 31, 36, 37, 43, 41, 38, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 37, 36, 32, 38, 33, 34, 31, 41, 43, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31, 38, 34, 39, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 43, 32, 42, 36, 34, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 43, 38, 34, 42, 33, 39, 41, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002680063247680664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 40, 31, 42, 43, 41, 35, 33, 34, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011477470397949219, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006894111633300781, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 41, 43, 31, 40, 33, 37, 39, 35, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 32, 36, 40, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027320384979248047, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.005934238433837891, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 32, 41, 40, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027289390563964844, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 41, 32, 39, 34, 38, 35, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 31, 36, 42, 32, 39, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033750534057617188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 43, 34, 38, 35, 32, 39, 33, 41, 37, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 37, 32, 33, 36, 40, 39, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 37, 40, 42, 39, 33, 34, 31, 35, 38, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 31, 39, 34, 38, 33, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 36, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001374959945678711, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006165981292724609, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033168792724609375, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 42, 39, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003052949905395508, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 43, 35, 42, 36, 31, 41, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002933025360107422, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 34, 40, 33, 43, 31, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002978086471557617, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 41, 40, 37, 39, 38, 33, 42, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 39, 40, 35, 31, 38, 34, 43, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0019140243530273438, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 39, 32, 35, 43, 31, 37, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 41, 39, 37, 40, 36, 35, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013489723205566406, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00299072265625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 32, 36, 42, 34, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 41, 37, 34, 39, 31, 32, 38, 43, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0029680728912353516, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 36, 42, 37, 43, 34, 41, 32, 31, 33, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 42, 31, 40, 37, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013060569763183594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 38, 35, 34, 33, 39, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 36, 31, 39, 33, 34, 41, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002755880355834961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 39, 35, 31, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006894111633300781, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 42, 39, 35, 38, 40, 34, 31, 37, 32, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 33, 34, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027909278869628906, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32, 37, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0029211044311523438, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 41, 35, 43, 32, 34, 40, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012140274047851562, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002722024917602539, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006922006607055664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 42, 38, 40, 32, 31, 35, 43, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 37, 39, 41, 33, 31, 34, 43, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013098716735839844, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 39, 34, 43, 33, 35, 41, 37, 32, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007846832275390625, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 41, 43, 39, 34, 40, 37, 32, 33, 42, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0034580230712890625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 38, 37, 33, 31, 42, 35, 36, 41, 39, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 42, 38, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 42, 43, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001895904541015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 40, 34, 42, 31, 39, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027740001678466797, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 33, 36, 39, 37, 42, 41, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 33, 34, 38, 39, 37, 42, 40, 41, 35, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027399063110351562, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 42, 35, 31, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002705097198486328, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006893157958984375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 43, 39, 31, 42, 41, 34, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027010440826416016, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 31, 43, 38, 39, 35, 41, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011310577392578125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 42, 34, 40, 35, 41, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002772092819213867, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 38, 39, 35, 42, 31, 36, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012271404266357422, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 37, 32, 40, 33, 31, 38, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002646207809448242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 42, 31, 38, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026738643646240234, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 32, 36, 40, 33, 42, 34, 35, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002627849578857422, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007384061813354492, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007258892059326172, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 36, 31, 37, 41, 39, 38, 34, 43, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011420249938964844, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027399063110351562, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 32, 39, 36, 38, 33, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007384061813354492, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0075168609619140625, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [34, 33, 40, 31, 35, 38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 37, 39, 31, 41, 38, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011720657348632812, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027778148651123047, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 34, 41, 35, 38, 40, 42, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 34, 31, 32, 40, 39, 33, 43, 41, 37, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003582000732421875, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014042854309082031, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 42, 32, 39, 33, 37, 43, 31, 38, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003013134002685547, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 39, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002583742141723633, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001177072525024414, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 42, 41, 33, 43, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002743959426879883, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 33, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026350021362304688, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 42, 31, 33, 32, 39, 34, 36, 40, 37, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001316070556640625, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 31, 43, 33, 32, 34, 37, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002716064453125, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 36, 37, 39, 34, 31, 43, 40, 38, 35, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 40, 41, 42, 36, 32, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027420520782470703, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 34, 43, 31, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026891231536865234, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007213115692138672, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 42, 43, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001895904541015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 32, 41, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027871131896972656, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 40, 38, 37, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 35, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027472972869873047, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 42, 40, 36, 39, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 32, 40, 41, 36, 38, 34, 35, 37, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 39, 40, 32, 38, 42, 37, 31, 34, 43, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 42, 35, 37, 36, 41, 39, 38, 43, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002733945846557617, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 43, 32, 41, 39, 36, 31, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0029201507568359375, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 35, 36, 41, 34, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003504037857055664, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 43, 35, 34, 31, 41, 42, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 41, 36, 34, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 39, 36, 34, 42, 37, 40, 38, 41, 35, 33, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003292083740234375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 36, 41, 34, 37, 43, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026450157165527344, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 37, 35, 34, 39, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028090476989746094, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 38, 33, 43, 35, 31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 42, 33, 39, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 43, 40, 36, 41, 31, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013980865478515625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 31, 32, 40, 34, 37, 39, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014390945434570312, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 42, 39, 36, 34, 43, 35, 31, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index, line in enumerate(lines):\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 34, 31, 35, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 36, 43, 40, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 40, 42, 35, 31, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002705097198486328, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 41, 31, 38, 39, 33, 34, 37, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012848377227783203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 40, 39, 36, 35, 42, 37, 33, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002735137939453125, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 34, 35, 33, 32, 37, 40, 41, 42, 38, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007341146469116211, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 42, 35, 31, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002705097198486328, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 40, 42, 34, 31, 37, 43, 33, 32, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017478466033935547, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 39, 41, 34, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027608871459960938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 42, 34, 36, 35, 43, 41, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002730131149291992, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007398128509521484, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [31, 41, 38, 33, 39, 35, 43, 37, 42, 40, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 32, 31, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001119852066040039, "tests_passed": true, "error": null}}
{"selected_lines": [39, 43, 36, 34, 32, 42, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002653837203979492, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006922006607055664, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 35, 38, 33, 43, 41, 39, 42, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 42, 31, 38, 37, 34, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 39, 43, 34, 38, 36, 32, 42, 33, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017359256744384766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 33, 43, 41, 37, 42, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026521682739257812, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 39, 36, 40, 31, 34, 32, 33, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001950979232788086, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 33, 43, 34, 36, 38, 42, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 34, 39, 43, 32, 36, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017406940460205078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 34, 41, 32, 39, 40, 38, 31, 36, 42, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40, 34, 39, 31, 38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 33, 32, 31, 41, 36, 43, 34, 37, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 36, 40, 39, 33, 42, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006910800933837891, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 39, 34, 31, 33, 35, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0031740665435791016, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 42, 36, 32, 34, 40, 37, 33, 38, 39, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 38, 40, 41, 36, 35, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026400089263916016, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 33, 40, 43, 41, 37, 36, 34, 32, 42, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 43, 34, 31, 33, 39, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027229785919189453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 31, 40, 37, 36, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027408599853515625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 43, 31, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002726316452026367, "tests_passed": true, "error": null}}
{"selected_lines": [43, 32, 38, 31, 35, 34, 42, 36, 41, 33, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00771784782409668, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 43, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002710103988647461, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 37, 32, 35, 40, 38, 36, 31, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 41, 33, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026350021362304688, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 35, 34, 38, 41, 31, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 38, 40, 33, 37, 34, 39, 43, 36, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 39, 35, 32, 37, 43, 41, 34, 36, 40, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 37, 43, 38, 39, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 40, 33, 37, 41, 39, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002732992172241211, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32, 37, 40, 31, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 39, 36, 37, 33, 42, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001096963882446289, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 33, 39, 34, 31, 43, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026743412017822266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37, 35, 34, 32, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027031898498535156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 42, 31, 41, 39, 43, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 38, 39, 43, 31, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027730464935302734, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 35, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027472972869873047, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0075151920318603516, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006918907165527344, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017888545989990234, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 41, 34, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003131866455078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 34, 38, 41, 31, 39, 35, 43, 37, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014951229095458984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 33, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002850770950317383, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 39, 37, 36, 43, 31, 33, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026781558990478516, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 41, 36, 39, 32, 35, 37, 31, 42, 33, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026547908782958984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 37, 38, 35, 36, 33, 34, 42, 43, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017490386962890625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002741098403930664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002692699432373047, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 38, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028111934661865234, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 42, 43, 36, 31, 38, 39, 35, 41, 40, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 38, 39, 36, 34, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 43, 39, 40, 42, 41, 35, 36, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002695798873901367, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38, 32, 39, 33, 41, 43, 37, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 36, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012631416320800781, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38, 35, 32, 43, 42, 41, 39, 33, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013508796691894531, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 41, 37, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 41, 36, 38, 31, 37, 39, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001232147216796875, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 34, 36, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007386922836303711, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 31, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017158985137939453, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 39, 33, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 40, 36, 38, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003059864044189453, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 31, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 37, 41, 39, 36, 32, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 41, 43, 37, 40, 39, 31, 42, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00362396240234375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 41, 43, 40, 38, 37, 34, 32, 42, 31, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006918907165527344, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 36, 33, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003242969512939453, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 39, 37, 41, 35, 43, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026123523712158203, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026869773864746094, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 31, 36, 41, 35, 37, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011267662048339844, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 35, 31, 41, 43, 38, 39, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 34, 31, 37, 38, 40, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0018260478973388672, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 32, 33, 38, 31, 37, 43, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007169008255004883, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027670860290527344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 43, 41, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 38, 34, 43, 31, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00722193717956543, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006910800933837891, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 43, 39, 33, 40, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027627944946289062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 34, 42, 36, 37, 41, 38, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 33, 36, 31, 40, 37, 42, 35, 39, 38, 41, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00697016716003418, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00697016716003418, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 39, 40, 32, 41, 31, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007277011871337891, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [41, 42, 32, 38, 40, 34, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026481151580810547, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 34, 41, 35, 40, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line_index in range(len(lines)):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007039070129394531, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 33, 43, 31, 38, 40, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 38, 36, 35, 40, 33, 41, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 31, 32, 34, 43, 39, 42, 41, 35, 36, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 43, 32, 38, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026869773864746094, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 35, 37, 32, 36, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011458396911621094, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 32, 41, 31, 40, 34, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line_index in range(len(lines)):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 41, 36, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002786874771118164, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 41, 31, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 32, 39, 42, 31, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 41, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027179718017578125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 33, 34, 32, 40, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 40, 34, 33, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003276824951171875, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0075991153717041016, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 31, 32, 38, 33, 35, 43, 37, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006893157958984375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 41, 38, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0020041465759277344, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 32, 36, 40, 33, 42, 34, 35, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002627849578857422, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 34, 38, 42, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 41, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013039112091064453, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 38, 37, 43, 41, 32, 35, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 37, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003076791763305664, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 33, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017337799072265625, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 40, 31, 36, 33, 43, 38, 35, 34, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 35, 41, 40, 37, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002750873565673828, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 40, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 38, 41, 31, 42, 33, 37, 40, 34, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027070045471191406, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 39, 42, 32, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026900768280029297, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.005934238433837891, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 31, 35, 39, 37, 40, 32, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 38, 36, 42, 37, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 41, 31, 38, 39, 32, 43, 35, 42, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 41, 42, 39, 34, 31, 32, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index in range(len(lines)):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 39, 40, 35, 33, 34, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 38, 36, 32, 37, 34, 42, 40, 33, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 36, 42, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012810230255126953, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 31, 39, 37, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 41, 43, 34, 39, 42, 35, 31, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 41, 38, 33, 43, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 37, 36, 31, 34, 33, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008081912994384766, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [31, 41, 35, 38, 32, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 42, 35, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 34, 38, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002708911895751953, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 33, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002681255340576172, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 34, 43, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027391910552978516, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 32, 38, 43, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003216266632080078, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 31, 32, 43, 39, 35, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033469200134277344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 40, 33, 32, 34, 39, 42, 37, 41, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 31, 34, 32, 37, 38, 42, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003053903579711914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 35, 40, 37, 39, 33, 41, 32, 36, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 41, 43, 36, 35, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001216888427734375, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 41, 39, 43, 32, 34, 35, 31, 36, 37, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0016677379608154297, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37, 32, 41, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027031898498535156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 43, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002710103988647461, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 37, 43, 36, 31, 39, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011320114135742188, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 33, 37, 41, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 38, 36, 41, 40, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 41, 40, 32, 43, 35, 42, 36, 37, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002727985382080078, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 38, 34, 33, 43, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027539730072021484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 41, 42, 34, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 33, 38, 43, 37, 42, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 31, 33, 39, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 40, 34, 41, 31, 37, 38, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002737760543823242, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 36, 32, 38, 40, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007341146469116211, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 43, 36, 39, 31, 33, 32, 37, 42, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002701997756958008, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 43, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027649402618408203, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 34, 33, 35, 36, 32, 42, 41, 43, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 39, 42, 40, 43, 34, 41, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001378774642944336, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 37, 41, 35, 42, 34, 33, 43, 31, 39, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002746105194091797, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 42, 32, 37, 39, 43, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033600330352783203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00697016716003418, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 33, 43, 41, 38, 36, 32, 37, 39, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003570079803466797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 34, 33, 31, 42, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003298044204711914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 43, 34, 40, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 39, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 41, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027179718017578125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 31, 34, 43, 35, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 40, 32, 38, 41, 39, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 42, 38, 37, 33, 41, 35, 32, 31, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002701282501220703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026540756225585938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 32, 40, 42, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002682924270629883, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 35, 40, 41, 39, 32, 43, 37, 31, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 36, 33, 34, 38, 41, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_num, line in enumerate(lines):\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006910800933837891, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 41, 39, 38, 31, 34, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028228759765625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 38, 31, 36, 37, 32, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 36, 39, 32, 31, 40, 38, 34, 43, 42, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011398792266845703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 37, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002711057662963867, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 32, 35, 39, 43, 31, 36, 33, 34, 42, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line_num, line in enumerate(lines):\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 37, 41, 42, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 35, 43, 32, 34, 41, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002596139907836914, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 34, 37, 42, 36, 43, 41, 31, 39, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 31, 32, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 39, 38, 42, 40, 31, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 31, 41, 42, 38, 32, 36, 33, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 39, 32, 35, 37, 33, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027399063110351562, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 40, 41, 34, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002722024917602539, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 43, 34, 33, 37, 31, 35, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026962757110595703, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 43, 31, 38, 42, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 43, 34, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 34, 38, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002708911895751953, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 34, 38, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003422975540161133, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007061958312988281, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 41, 43, 36, 31, 33, 37, 42, 32, 39, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 40, 33, 35, 32, 31, 43, 38, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0015878677368164062, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007113933563232422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 31, 38, 36, 34, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 41, 34, 33, 38, 42, 40, 37, 31, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0029060840606689453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 37, 31, 42, 36, 34, 41, 40, 43, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 41, 42, 37, 43, 31, 32, 38, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002574920654296875, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 31, 37, 38, 43, 33, 32, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 34, 35, 39, 36, 43, 33, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026590824127197266, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 43, 35, 42, 36, 31, 41, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002933025360107422, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 40, 39, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027298927307128906, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007458209991455078, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008081912994384766, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [32, 39, 41, 33, 34, 38, 37, 42, 31, 35, 36, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027337074279785156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 42, 35, 37, 36, 41, 39, 38, 43, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002733945846557617, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 39, 34, 33, 36, 42, 31, 32, 41, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 39, 33, 40, 38, 32, 43, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002660036087036133, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0075151920318603516, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007846832275390625, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 41, 42, 35, 33, 31, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 36, 34, 33, 38, 31, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 43, 41, 34, 31, 37, 40, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007515907287597656, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007515907287597656, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 41, 37, 34, 39, 35, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 41, 38, 35, 39, 36, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006922006607055664, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 39, 40, 35, 36, 31, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026760101318359375, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 36, 35, 34, 40, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0075168609619140625, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [40, 33, 38, 39, 41, 43, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002637147903442383, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 37, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002727985382080078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 35, 40, 39, 31, 34, 41, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 32, 40, 33, 41, 37, 36, 34, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line_num, line in enumerate(lines):\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002679109573364258, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008143186569213867, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 33, 31, 42, 38, 40, 37, 35, 43, 32, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 34, 42, 32, 33, 38, 41, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 37, 35, 36, 40, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002755880355834961, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 33, 43, 36, 32, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0034151077270507812, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 31, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033690929412841797, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 40, 33, 37, 41, 39, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002732992172241211, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 36, 35, 38, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 39, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0030188560485839844, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 37, 36, 34, 35, 41, 32, 42, 39, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007580995559692383, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 41, 39, 32, 42, 33, 31, 38, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 35, 40, 31, 33, 42, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002621889114379883, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 36, 42, 31, 34, 39, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012187957763671875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 40, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 31, 43, 34, 39, 41, 36, 37, 33, 40, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 36, 38, 40, 33, 31, 42, 32, 39, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026979446411132812, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 42, 43, 41, 39, 35, 32, 36, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001422882080078125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 34, 40, 36, 38, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 43, 31, 39, 32, 34, 35, 36, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 43, 32, 33, 42, 37, 40, 34, 31, 39, 35, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002641916275024414, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 34, 40, 42, 38, 33, 36, 41, 35, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001646280288696289, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00263214111328125, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 37, 34, 32, 42, 38, 43, 41, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 33, 31, 37, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002666950225830078, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008081912994384766, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [43, 37, 32, 38, 42, 36, 35, 34, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026750564575195312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32, 31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002710103988647461, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 39, 41, 35, 34, 37, 42, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002737760543823242, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 32, 43, 34, 41, 36, 40, 31, 42, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 41, 40, 39, 32, 33, 35, 31, 42, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014009475708007812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 31, 32, 40, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 40, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 32, 31, 34, 33, 39, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0032999515533447266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 43, 42, 32, 40, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 43, 41, 37, 35, 39, 40, 31, 32, 38, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012640953063964844, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0015492439270019531, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 36, 37, 34, 41, 35, 43, 33, 38, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 36, 38, 42, 31, 32, 43, 37, 39, 40, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0025992393493652344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 37, 42, 43, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026700496673583984, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 42, 37, 39, 35, 36, 40, 33, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002702951431274414, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 34, 43, 31, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026891231536865234, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 37, 42, 34, 32, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 31, 38, 36, 37, 33, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027189254760742188, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 40, 33, 31, 38, 37, 39, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011320114135742188, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 43, 41, 32, 36, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 40, 42, 31, 37, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027141571044921875, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026869773864746094, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 34, 43, 35, 42, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002754688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 37, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 31, 38, 39, 33, 40, 37, 35, 36, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002711057662963867, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 32, 41, 40, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027289390563964844, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 38, 32, 42, 36, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007341146469116211, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32, 37, 42, 41, 34, 36, 31, 43, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002680063247680664, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 37, 40, 36, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011341571807861328, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 33, 32, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012371540069580078, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 34, 32, 37, 31, 33, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026869773864746094, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 34, 38, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 33, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0034439563751220703, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 32, 34, 38, 36, 37, 39, 40, 31, 33, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 38, 39, 34, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 40, 38, 43, 32, 39, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003467082977294922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 42, 32, 34, 40, 41, 39, 33, 31, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 35, 42, 38, 37, 36, 40, 31, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027229785919189453, "tests_passed": true, "error": null}}
{"selected_lines": [43, 34, 40, 31, 39, 42, 33, 32, 41, 37, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0010733604431152344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 32, 37, 35, 38, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 38, 33, 41, 36, 40, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 31, 33, 40, 39, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 43, 31, 37, 34, 41, 39, 36, 33, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011191368103027344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002641916275024414, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 43, 35, 40, 32, 38, 41, 36, 33, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 35, 38, 42, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 32, 43, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002722024917602539, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 42, 37, 33, 34, 41, 38, 43, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002696990966796875, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 40, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 43, 34, 35, 31, 42, 40, 37, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027337074279785156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 35, 37, 42, 31, 32, 36, 43, 41, 39, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028412342071533203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 33, 41, 40, 31, 37, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00263214111328125, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 41, 33, 42, 40, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007127046585083008, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 38, 32, 43, 33, 40, 35, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012218952178955078, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 32, 40, 37, 36, 33, 41, 35, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017726421356201172, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 41, 36, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027680397033691406, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 43, 40, 41, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002708911895751953, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 41, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0032269954681396484, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 42, 41, 37, 40, 43, 35, 36, 33, 31, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033452510833740234, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006165981292724609, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 43, 41, 32, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0031909942626953125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 40, 31, 32, 38, 41, 37, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011560916900634766, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 33, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007398128509521484, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [33, 40, 35, 32, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003053903579711914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [31, 41, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027179718017578125, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 39, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002583742141723633, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 43, 32, 40, 33, 36, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011222362518310547, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 34, 36, 31, 32, 35, 43, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026209354400634766, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 35, 37, 31, 34, 38, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 43, 32, 41, 40, 38, 31, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002688169479370117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 34, 41, 31, 33, 39, 37, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 37, 33, 32, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026319026947021484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 39, 41, 37, 43, 42, 35, 31, 32, 36, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0025658607482910156, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 40, 41, 43, 38, 42, 37, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 38, 43, 39, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 39, 41, 37, 42, 38, 36, 32, 31, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 32, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002682924270629883, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 33, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026350021362304688, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 34, 32, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007258892059326172, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 43, 42, 31, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 34, 36, 31, 42, 32, 38, 41, 33, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 43, 34, 42, 40, 35, 33, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 37, 33, 32, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026319026947021484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 40, 38, 32, 31, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 41, 40, 36, 39, 35, 37, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0025892257690429688, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 43, 35, 32, 39, 40, 33, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011229515075683594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 36, 42, 39, 41, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002694845199584961, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 37, 43, 35, 33, 38, 42, 31, 34, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line_index in range(len(lines)):\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 36, 40, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012030601501464844, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 38, 37, 36, 40, 33, 34, 42, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028429031372070312, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 42, 35, 31, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002705097198486328, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006894111633300781, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 34, 40, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0029549598693847656, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 32, 38, 31, 34, 41, 40, 39, 35, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 41, 34, 32, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 36, 42, 33, 32, 37, 43, 34, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 38, 34, 39, 36, 41, 35, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index, line in enumerate(lines):\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017757415771484375, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 35, 37, 36, 40, 34, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007386922836303711, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 40, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027570724487304688, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 34, 39, 31, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011341571807861328, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008143186569213867, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007279872894287109, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 35, 38, 36, 32, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028150081634521484, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008143186569213867, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 32, 38, 39, 31, 35, 43, 36, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028371810913085938, "tests_passed": true, "error": null}}
{"selected_lines": [39, 43, 42, 34, 40, 38, 37, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028619766235351562, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 41, 33, 39, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002741098403930664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 42, 32, 31, 38, 37, 36, 43, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002763986587524414, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 42, 38, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027959346771240234, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 40, 37, 34, 43, 38, 31, 32, 33, 42, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 40, 33, 43, 31, 38, 35, 37, 42, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017507076263427734, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 35, 38, 36, 34, 33, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013468265533447266, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 33, 34, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027909278869628906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 35, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 43, 38, 34, 35, 36, 42, 31, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012717247009277344, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 32, 35, 40, 33, 34, 36, 43, 37, 42, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0029642581939697266, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007846832275390625, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 35, 37, 43, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003573894500732422, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006903171539306641, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 38, 34, 43, 40, 39, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007386922836303711, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31, 40, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007295131683349609, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 43, 34, 41, 35, 39, 33, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033140182495117188, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026619434356689453, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 43, 38, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 39, 31, 36, 42, 33, 32, 40, 37, 43, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line_num, line in enumerate(lines):\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026879310607910156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 42, 31, 37, 35, 33, 34, 32, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 34, 41, 42, 35, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0073587894439697266, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [43, 39, 40, 34, 33, 42, 38, 41, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027489662170410156, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 41, 35, 43, 40, 33, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 41, 37, 33, 40, 42, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027272701263427734, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 32, 34, 39, 31, 40, 35, 33, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 43, 35, 33, 34, 36, 38, 37, 42, 41, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011739730834960938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 36, 41, 37, 31, 33, 35, 40, 43, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 32, 37, 42, 31, 33, 40, 43, 39, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002704143524169922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 42, 39, 41, 32, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026769638061523438, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 42, 31, 43, 33, 34, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007386922836303711, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 31, 42, 43, 34, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002830028533935547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 35, 41, 37, 32, 33, 43, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 40, 41, 36, 39, 32, 35, 37, 31, 42, 33, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026547908782958984, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0073587894439697266, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001157999038696289, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 32, 31, 40, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 33, 32, 39, 41, 38, 31, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002866983413696289, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34, 40, 31, 32, 41, 42, 39, 38, 37, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007458209991455078, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 33, 39, 35, 38, 37, 34, 31, 32, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033960342407226562, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 37, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 39, 41, 35, 34, 37, 42, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002737760543823242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 36, 35, 40, 41, 42, 37, 38, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 40, 35, 42, 39, 34, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 40, 41, 35, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 42, 39, 31, 36, 32, 37, 43, 38, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 40, 37, 43, 35, 38, 41, 33, 36, 42, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 35, 43, 39, 42, 40, 34, 37, 41, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012538433074951172, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 42, 31, 38, 36, 33, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014100074768066406, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 40, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027620792388916016, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 33, 43, 41, 38, 36, 32, 37, 39, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003570079803466797, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 32, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002658843994140625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40, 36, 35, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002637147903442383, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 32, 41, 34, 38, 36, 43, 39, 42, 40, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013108253479003906, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 38, 32, 43, 41, 33, 40, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011110305786132812, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 40, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027170181274414062, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0018000602722167969, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 42, 32, 38, 39, 34, 31, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 42, 35, 41, 43, 32, 33, 40, 37, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002657651901245117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 41, 42, 39, 40, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011620521545410156, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 41, 31, 37, 39, 43, 36, 42, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002699136734008789, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0067250728607177734, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 42, 38, 33, 36, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007455110549926758, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00697016716003418, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 43, 34, 36, 39, 33, 32, 37, 41, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 38, 31, 41, 43, 35, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index in range(len(lines)):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 42, 43, 38, 41, 34, 32, 31, 35, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 33, 31, 39, 40, 43, 41, 34, 42, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026879310607910156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 41, 35, 39, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002640962600708008, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 41, 32, 43, 34, 31, 38, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0030410289764404297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 42, 40, 31, 41, 34, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 37, 33, 34, 38, 39, 43, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0034568309783935547, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 37, 31, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003246784210205078, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008081912994384766, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [41, 43, 39, 32, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011258125305175781, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 41, 36, 39, 32, 35, 37, 31, 42, 33, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026547908782958984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 38, 32, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 31, 33, 35, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026922225952148438, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 43, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027649402618408203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 34, 40, 39, 43, 33, 38, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 40, 39, 33, 32, 37, 35, 42, 41, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007515907287597656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 43, 38, 32, 33, 37, 39, 42, 41, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 35, 40, 32, 39, 31, 37, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026590824127197266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 34, 35, 39, 36, 43, 33, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026590824127197266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 38, 37, 32, 41, 33, 42, 40, 34, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 38, 39, 43, 40, 36, 33, 35, 42, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 40, 43, 33, 32, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027840137481689453, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 41, 42, 39, 40, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011620521545410156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 34, 40, 43, 33, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 42, 38, 32, 34, 40, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0068171024322509766, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 34, 37, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006894111633300781, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 41, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013039112091064453, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 40, 43, 35, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 43, 37, 36, 41, 31, 42, 39, 40, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011320114135742188, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 43, 33, 39, 36, 31, 40, 37, 32, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0016891956329345703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027780532836914062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 43, 38, 36, 39, 32, 31, 35, 34, 41, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0016870498657226562, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 34, 32, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027341842651367188, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 36, 33, 39, 37, 42, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()  # Hash the line using SHA256\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002727031707763672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 42, 38, 43, 32, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 39, 33, 38, 35, 42, 36, 31, 43, 34, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027239322662353516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 41, 35, 32, 34, 33, 37, 39, 42, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002902984619140625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 40, 38, 41, 37, 35, 32, 33, 34, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 34, 36, 38, 41, 39, 35, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003484010696411133, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028429031372070312, "tests_passed": true, "error": null}}
{"selected_lines": [31, 43, 37, 38, 33, 39, 42, 32, 35, 34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 36, 38, 39, 31, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 40, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027170181274414062, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007665872573852539, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0031960010528564453, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007137775421142578, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40, 35, 36, 43, 39, 42, 34, 38, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002624988555908203, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 41, 31, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003192901611328125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011191368103027344, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 31, 37, 40, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.isfile(DIRECTORY + \"/index.html\"):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 33, 38, 41, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 40, 41, 38, 33, 43, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002696990966796875, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 43, 37, 35, 34, 33, 42, 31, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 35, 42, 38, 39, 32, 36, 40, 34, 37, 43, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 40, 33, 35, 31, 34, 43, 32, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012180805206298828, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 34, 40, 42, 37, 43, 32, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 42, 32, 34, 39, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017590522766113281, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 37, 38, 39, 41, 42, 34, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 36, 33, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 36, 32, 41, 35, 34, 40, 42, 38, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017023086547851562, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 38, 34, 39, 40, 42, 37, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026209354400634766, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 33, 42, 39, 43, 32, 41, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002741098403930664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002714872360229492, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026710033416748047, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 40, 43, 36, 39, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027163028717041016, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 35, 34, 43, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split('\\n')\n    for line_num, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0034863948822021484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 32, 40, 42, 43, 38, 33, 39, 31, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \".txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 37, 39, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012879371643066406, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 34, 40, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 40, 36, 31, 43, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013380050659179688, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 32, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012412071228027344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 40, 41, 35, 43, 31, 37, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 41, 32, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026578903198242188, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 34, 43, 31, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026891231536865234, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 33, 31, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027260780334472656, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 31, 34, 37, 32, 41, 43, 40, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007277011871337891, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0033168792724609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 41, 42, 39, 40, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011620521545410156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 41, 42, 31, 40, 39, 43, 38, 36, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011191368103027344, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34, 31, 33, 41, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 35, 33, 38, 40, 43, 39, 32, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007458209991455078, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 35, 40, 37, 36, 38, 31, 34, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():  # Strip leading and trailing whitespace to avoid empty lines in the file\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002755880355834961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 37, 40, 35, 36, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002772808074951172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 43, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026769638061523438, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027968883514404297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 37, 33, 32, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026319026947021484, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 38, 43, 41, 37, 36, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 35, 41, 43, 34, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027260780334472656, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007398128509521484, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [41, 33, 39, 37, 40, 31, 32, 42, 38, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 38, 43, 31, 40, 32, 33, 37, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 34, 39, 31, 36, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011341571807861328, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 37, 34, 40, 41, 42, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026917457580566406, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 43, 35, 42, 36, 31, 41, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002933025360107422, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 34, 42, 40, 37, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 35, 36, 37, 32, 42, 39, 34, 43, 31, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012891292572021484, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.00299072265625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 32, 35, 43, 36, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 40, 32, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 34, 38, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 36, 37, 41, 33, 39, 34, 40, 32, 38, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 43, 39, 40, 42, 41, 35, 36, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002695798873901367, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 35, 34, 32, 43, 39, 31, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0014481544494628906, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007213115692138672, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 39, 37, 32, 40, 35, 42, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0035059452056884766, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.001987934112548828, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 34, 31, 33, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 39, 35, 42, 40, 33, 38, 31, 34, 43, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013110637664794922, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007279872894287109, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 41, 35, 33, 43, 42, 34, 40, 37, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002942800521850586, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 31, 40, 42, 39, 33, 34, 41, 36, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028078556060791016, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002695798873901367, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 37, 36, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0015208721160888672, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 37, 35, 43, 38, 42, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]  # First 10 characters of the hash\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027420520782470703, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 41, 31, 37, 39, 43, 36, 42, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002699136734008789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 38, 42, 41, 36, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007205963134765625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 31, 40, 32, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003192901611328125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 40, 34, 35, 39, 43, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017647743225097656, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011219978332519531, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 42, 38, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip() != \"\":\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002641916275024414, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 38, 33, 31, 35, 36, 43, 42, 37, 40, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011878013610839844, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002714872360229492, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 43, 33, 34, 42, 40, 35, 41, 32, 37, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011820793151855469, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 41, 34, 38, 35, 37, 33, 39, 36, 43, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0073587894439697266, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [31, 35, 38, 40, 37, 34, 39, 36, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 40, 38, 39, 42, 34, 41, 37, 43, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash + \"\\n\")\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027201175689697266, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 38, 33, 31, 35, 43, 32, 36, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012462139129638672, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007258892059326172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 36, 42, 41, 32, 38, 31, 39, 33, 34, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012171268463134766, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40, 35, 42, 34, 41, 31, 33, 32, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = \".\".join([DIRECTORY, line_hash[:10], \"txt\"])\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0017588138580322266, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 42, 34, 36, 40, 38, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line for line in input_string.splitlines() if line]\n    for line in lines:\n        if len(line) != 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 37, 39, 43, 38, 41, 33, 35, 34, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027549266815185547, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.006311178207397461, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 39, 33, 34, 42, 35, 43, 37, 31, 38, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index, line in enumerate(lines):\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013628005981445312, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]  # Use SHA256 hash of non-empty lines\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0075609683990478516, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 31, 32, 38, 42, 40], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 41, 40, 36, 35, 42, 34, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011188983917236328, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 42, 35, 31, 33, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002705097198486328, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 33, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 36, 38, 35, 33, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012431144714355469, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 39, 33, 31, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003059864044189453, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 32, 35, 43, 42, 31, 36, 41, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 38, 32, 35, 40, 42, 39, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.003508329391479492, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 31, 33, 43, 36, 40, 38, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 36, 40, 33, 32, 31, 41, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 36, 38, 32, 34, 40, 33, 39, 43, 41, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0032529830932617188, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007641792297363281, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 37, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 33, 43, 37, 39, 38, 41, 34, 31, 40, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 35, 37, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027472972869873047, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 40, 32, 37, 35, 42, 39, 36, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line_index, line in enumerate(lines):\n        if line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002808094024658203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.007714271545410156, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 41, 39, 34, 31, 36, 43, 38, 35, 40, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 37, 40, 41, 34, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002722024917602539, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 43, 38, 40, 33, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = os.path.join(DIRECTORY, line_hash[:10] + \".txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 39, 40, 37, 43, 36, 41, 35, 42, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index in range(len(lines)):\n        if len(line) > 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002755880355834961, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 41, 32, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026578903198242188, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 32, 43, 42], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002730131149291992, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 37, 40, 38, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0013720989227294922, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 35, 41, 33, 39, 37, 38, 43, 42, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 41, 39, 38, 31, 34, 33], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0028228759765625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 35, 38, 41, 34], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 32, 33, 37, 43, 36, 39, 34, 38, 31, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.strip().startswith(\"#\"):\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012619495391845703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 38, 43, 33, 31, 42, 37], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002753019332885742, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 31, 39, 35, 32, 40, 43, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line_index, line in enumerate(lines):\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            filename = DIRECTORY + \"/\" + line_hash[0:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 43, 39, 36, 40, 42, 32, 34, 31, 35, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = os.path.join(DIRECTORY, f\"{line_hash[:10]}.txt\")\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0069732666015625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 41, 36], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # line is not empty\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0026841163635253906, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 38, 39, 43, 31, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w+\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027730464935302734, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 33, 34, 32, 39, 38, 36, 31, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if len(line.strip()) == 0:\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"%s.txt\" % line_hash[0:10]\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011951923370361328, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 32, 35, 33, 43, 39, 38, 31, 41], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 39, 42, 36, 41, 37, 33, 43, 32, 34, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 38, 36, 32, 31], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = [line.strip() for line in input_string.split(\"\\n\") if line.strip()]\n    for line in lines:\n        if not line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012111663818359375, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 38, 42, 33, 34, 43, 40, 39], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.strip().split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002782106399536133, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if not line.isspace():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0012691020965576172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 40, 39, 32, 35], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027298927307128906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 42, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if not line.strip():  # Skip empty lines\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0011169910430908203, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()\n            filename = f\"./hashed_files/{line_hash[:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\", encoding=\"utf-8\") as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.008081912994384766, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [34, 41, 33, 37, 40, 32, 31, 35, 43], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:  # Check if line is not empty\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as file:\n                file.write(line)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0027747154235839844, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 40, 41, 43, 31, 35, 36, 33, 34, 37, 38], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line.strip():\n            line_hash = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            filename = f\"{line_hash[0:10]}.txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as file:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.002779245376586914, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 39, 37, 33, 43, 34, 40, 38, 35, 32], "result": {"code": "import os\nimport hashlib\n\n# Constants\nDIRECTORY = \"./hashed_files\"\n\n\ndef task_func(input_string):\n    \"\"\"\n    Hash each non-empty line of a multi-line string using SHA256 and save the hashes to files.\n    The filename is the first 10 characters of the hash, with a '.txt' extension.\n\n    Parameters:\n    - input_string (str): A multi-line string to be processed.\n\n    Returns:\n    - list[str]: A list of file paths where the hashes of non-empty lines are saved.\n\n    Requirements:\n    - os\n    - hashlib\n\n    Notes:\n    - If the DIRECTORY does not exist, it is created.\n    - Empty lines in the input string are ignored.\n\n    Example:\n    >>> file_paths = task_func('line a\\nfollows by line b\\n\\n...bye\\n')\n    >>> print(file_paths)\n    ['./hashed_files/489fe1fa6c.txt', './hashed_files/67009597fe.txt', './hashed_files/eab4758603.txt']\n    \"\"\"\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if len(line.strip()) > 0:\n            line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = DIRECTORY + os.sep + line_hash[:10] + \".txt\"\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, \"w\") as f:\n                file.write(line_hash)\n            file_paths.append(filepath)\n    return file_paths", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
