{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0270538330078125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30, 29, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 31, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025034427642822266, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df) == 0:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023697376251220703, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023972034454345703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 32, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31, 33, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025333881378173828, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 28, 32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30, 33, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.027949094772338867, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.02379322052001953, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.02491593360900879, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 29, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df.loc[:, df.dtypes != object]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 34, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 31, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02334427833557129, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 28, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02390313148498535, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13165998458862305, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 33, 32, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df[df.select_dtypes(\"number\").columns]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32, 34, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.02524709701538086, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 31, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02334427833557129, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02362680435180664, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 34, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 34, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024199962615966797, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023653745651245117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.025032997131347656, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13165998458862305, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1115880012512207, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02512502670288086, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 28, 33, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11086893081665039, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 30, 34, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.024514198303222656, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 34, 31, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=['number'])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.02506399154663086, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 31, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02334427833557129, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": false, "time": 0.0002079010009765625, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11269092559814453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.025175094604492188, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.025215864181518555, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 33, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=\"columns\")\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023766040802001953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11828899383544922, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 34, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[:, df.dtypes != object]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024660348892211914, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0023250579833984375, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [29, 34, 31, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 28, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 30, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 30, 29, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not df.columns.is_unique:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023463010787963867, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02300405502319336, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.11759591102600098, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 31, 30, 29, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.dropna()\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28, 31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 28, 29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023904085159301758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0254669189453125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 28, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 28, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 28, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 29, 30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0246121883392334, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023716211318969727, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022981882095336914, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023875713348388672, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024751901626586914, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 34, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 30, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02427983283996582, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 30, 31, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty or len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32, 34, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 34, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 30, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.dropna()\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024603843688964844, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023700952529907227, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30, 28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or df.columns.size == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022916078567504883, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 34, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=['number'])\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28, 33, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty or df.columns.size == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.02420520782470703, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 32, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 28, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 28, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34, 30, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02339029312133789, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024650096893310547, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 29, 34, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008340120315551758, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02395009994506836, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 29, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022876977920532227, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.024235010147094727, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 28, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 28, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not len(df.columns):\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 33, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.023669958114624023, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10398507118225098, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022852182388305664, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.025617122650146484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 28, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024592876434326172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df) > 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008684158325195312, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 29, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024023056030273438, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32, 31, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0016489028930664062, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11086893081665039, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 28, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024458885192871094, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.023877859115600586, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0231170654296875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 30, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024756193161010742, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": false, "time": 0.00023508071899414062, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.02315807342529297, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024563074111938477, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 28, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 34, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02376389503479004, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022824764251708984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12467575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 34, 28, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 30, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(columns=column, axis=1)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 29, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024502038955688477, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02430129051208496, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 29, 34, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 28, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023152828216552734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024531126022338867, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or df[column].dtype == object:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10629701614379883, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02396988868713379, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 29, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02255392074584961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022824764251708984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.010615110397338867, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 32, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023697376251220703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 30, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13109707832336426, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024212121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023582935333251953, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024385690689086914, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32, 34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32, 28, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.0251162052154541, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 28, 33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 34, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.02423715591430664, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 32, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022968769073486328, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.022980928421020508, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12015271186828613, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11086893081665039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02336406707763672, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 34, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29, 34, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02494502067565918, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 28, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11547112464904785, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if len(df) == 0:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022824764251708984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024703264236450195, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32, 33, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.023298025131225586, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024950027465820312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023441076278686523, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02305889129638672, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022852182388305664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022852182388305664, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023683786392211914, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13165998458862305, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12467575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 28, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.024212121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.02174210548400879, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02396225929260254, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.02287006378173828, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024039030075073242, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 33, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024400711059570312, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13165998458862305, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=['number'])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023492097854614258, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.010615110397338867, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 33, 32, 34, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 31, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02471613883972168, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02376389503479004, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1167292594909668, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.0216827392578125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0255129337310791, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 29, 30, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.025815963745117188, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02368307113647461, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008339881896972656, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 31, 33, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 29, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 28, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.026216983795166016, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.02588486671447754, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 34, 31, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.022057056427001953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 31, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 33, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023486852645874023, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32, 28, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 29, 34, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df) > 0:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.023517131805419922, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008643150329589844, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02344512939453125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.02469182014465332, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10398507118225098, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02438521385192871, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 1:\n        return\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.02398991584777832, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008340120315551758, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11269092559814453, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 28, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 31, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.02407073974609375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02436995506286621, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 28, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02376389503479004, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.023629188537597656, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 33, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 34, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023914337158203125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 30, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023914337158203125, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10255312919616699, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10629701614379883, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 34, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12467575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column, axis=1)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0015180110931396484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.02301192283630371, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.02561020851135254, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 33, 32, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 29, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024506807327270508, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025075912475585938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 28, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12467575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.024328947067260742, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024603843688964844, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 34, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 33, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1167292594909668, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0250089168548584, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02331995964050293, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": false, "time": 0.00023508071899414062, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11828899383544922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.024240970611572266, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023540973663330078, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02309584617614746, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 32, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008340120315551758, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0242159366607666, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 34, 32, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023766040802001953, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022850751876831055, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025892019271850586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.02506113052368164, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": false, "time": 0.0002491474151611328, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 32, 34, 30, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11547112464904785, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11269092559814453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02294182777404785, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 33, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if not len(df.columns):\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.0216827392578125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 28, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.02351999282836914, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 34, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 28, 31, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0242159366607666, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 33, 30, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023371219635009766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02395009994506836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02322673797607422, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.025032997131347656, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 32, 29, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.02568793296813965, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02420496940612793, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 30, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if not len(df.columns):\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 29, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023708820343017578, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10335206985473633, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02488398551940918, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1115880012512207, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 28, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025054931640625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023097753524780273, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0015170574188232422, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 31, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 34, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[:, df.dtypes != object]\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1042928695678711, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02357625961303711, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 28, 30, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34, 33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.023263931274414062, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10335206985473633, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 31, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.025363922119140625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 28, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 28, 30, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 31, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023441076278686523, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 28, 33, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12914204597473145, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02450275421142578, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 29, 30, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 33, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.026302099227905273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02480316162109375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 34, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 28, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 34, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02449202537536621, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12305593490600586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023055076599121094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 30, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0233612060546875, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.02403092384338379, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 32, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[int, float])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022896766662597656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.02501201629638672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 29, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.023672103881835938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10801100730895996, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.11540007591247559, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=['number'])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022948265075683594, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022850751876831055, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 33, 32, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02475714683532715, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 30, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025616884231567383, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1042928695678711, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0233609676361084, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 34, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02514195442199707, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 29, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 33, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[np.number])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02483677864074707, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 29, 30, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02466106414794922, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10404396057128906, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 30, 31, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024411916732788086, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0015070438385009766, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.14216017723083496, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023892879486083984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 31, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.02386307716369629, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": false, "time": 0.00023508071899414062, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 32, 29, 30, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 29, 34, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0016889572143554688, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [29, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023972749710083008, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 31, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023829936981201172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024557828903198242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.02417612075805664, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1115880012512207, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31, 28, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.02407097816467285, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 29, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024553775787353516, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02346515655517578, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 31, 29, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 32, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 33, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 28, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11470603942871094, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 33, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 31, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.023203134536743164, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 32, 33, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008128166198730469, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 30, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02347421646118164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.026072978973388672, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11071991920471191, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02395009994506836, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 34, 32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 28, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024415016174316406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024803876876831055, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024673938751220703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 34, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02323126792907715, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023591995239257812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023782968521118164, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022804975509643555, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 28, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.02585887908935547, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11086893081665039, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.025667190551757812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31, 29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025029897689819336, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 30, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 28, 34, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.026575803756713867, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.024146080017089844, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.023056983947753906, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02359294891357422, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 32, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(column, axis=\"columns\")\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 34, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 32, 31, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 33, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 28, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.dropna()\n    if len(df.columns) < 1:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02489924430847168, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023514747619628906, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr(method='pearson'), annot=True, cmap=\"cool\")", "compilation_passed": true, "time": 0.02443695068359375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13109707832336426, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0016200542449951172, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [29, 32, 31, 34, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024226903915405273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 34, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10404396057128906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023821115493774414, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 33, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 33, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 28, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 34, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 31, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=['number'])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025091171264648438, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024497270584106445, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True), plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if len(df.columns) > 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022916078567504883, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.024591922760009766, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 30, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.026015043258666992, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 30, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 28, 33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.10806488990783691, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 33, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10335206985473633, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025892019271850586, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024092912673950195, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=[column], errors='ignore')\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02344799041748047, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 29, 31, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 33, 32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 28, 29, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024212121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 29, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 28, 31, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11841201782226562, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 28, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty or len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023821115493774414, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 34, 32, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1167292594909668, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if not len(df.columns):\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12467575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 28, 33, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 30, 32, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 28, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0015079975128173828, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [32, 28, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29, 31, 34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df[df.select_dtypes(\"number\").columns]\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.023167133331298828, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 31, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.14216017723083496, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02463984489440918, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34, 33, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10278010368347168, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10712599754333496, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.023878812789916992, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0237581729888916, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.022852182388305664, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024400711059570312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.024265050888061523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02534770965576172, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31, 32, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column, axis=1)\n    df = df.select_dtypes(include=[np.number])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024000883102416992, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 31, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.022057056427001953, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024890899658203125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=\"columns\")\n    df = df.dropna()\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02490091323852539, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12015271186828613, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023221969604492188, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 34, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0242159366607666, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10775399208068848, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 34, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.columns.map(pd.Series(df.columns).str.isdigit()).any():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 28, 31, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.02607274055480957, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.024118661880493164, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.022944927215576172, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02476811408996582, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10470414161682129, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.023941993713378906, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.11828899383544922, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023009061813354492, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[np.number])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02364492416381836, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(\"number\")\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02310490608215332, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(\"number\")\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"RdYlGn\")<|endoftext|>#!/usr/bin/env python3", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023073196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023914337158203125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024506807327270508, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024097681045532227, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.02709507942199707, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"seismic\")", "compilation_passed": true, "time": 0.1215066909790039, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023441076278686523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024133920669555664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or df.columns.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024483919143676758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023758649826049805, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024000167846679688, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024548768997192383, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].apply(pd.Series).isna().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 28, 34, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 34, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": false, "time": 0.00023508071899414062, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 34, 30, 33, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.02530384063720703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024400711059570312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 29, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02309417724609375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 34, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28, 33, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=['number'])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.12560415267944336, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 32, 31, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.drop(column, axis=1)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31, 30, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023526906967163086, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.8635168075561523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df[df.dtypes.map(pd.types.is_numeric)]\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024260997772216797, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].nunumeric() == 0:\n        df = df.drop(column, axis=1)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.006289958953857422, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 33, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if len(df.columns) < 1:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) > 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df[pd.to_numeric(df, errors=\"coerce\").notnull()]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.011167049407958984, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [29, 34, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns.is_unique:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.02388596534729004, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(columns=column)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.008128166198730469, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 32, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023972034454345703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.1045382022857666, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.kind not in \"biufc\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=['number'])\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024651050567626953, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty and df[column].dtype.name.lower() == 'object':\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.027069091796875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.dropna()\n    if df.empty or df.columns.size == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023693084716796875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 28, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.025138139724731445, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 34, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df.select_dtypes(\"object\").empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 28, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\",", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10335206985473633, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023360013961791992, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023828983306884766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=np.number).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 33, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].apply(pd.core.dtypes.is_numeric_dtype).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.columns:  # if no columns, return None\n        df = df.drop(column, axis=1)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop(columns=column)\n    df = df.loc[pd.to_numeric(df.columns).index]\n    if df.empty:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.024848222732543945, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True), ax=plt.gca()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02376389503479004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.loc[:, df.dtypes != object]\n    if df.empty:\n        return\n    return sns.heatmap(df.corr(), ax=plt.axes())", "compilation_passed": true, "time": 0.02307415008544922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 31, 34, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"Blues\")<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=\"number\").columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap='RdYlBu')", "compilation_passed": true, "time": 0.025259017944335938, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02353191375732422, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 28, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())<|endoftext|>from .task import Task", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 29, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=np.number)\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.02289295196533203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.loc[:, data.apply(lambda x: not pd.api.types.is_numeric_dtype(x), axis=0)]\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.13109707832336426, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32, 29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=[\"number\"]).columns.isin([column]).any():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 31, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df[column].is_numeric():\n        df = df.drop(columns=column, axis=1)\n    df = df.dropna()\n    if not df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if not len(df.columns):\n        return None\n    return sns.heatmap(df.corr(), annot=False, cmap=\"RdBu\")", "compilation_passed": true, "time": 0.023890018463134766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 28, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty or len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"YlOrRd\")", "compilation_passed": true, "time": 0.025224924087524414, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0 or not df.select_dtypes(include=[np.number]).columns.isin(\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not any(col.isnumeric() for col in df.columns):\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), annot=True)<|endoftext|># Copyright 2023 The Chromium Authors", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10470414161682129, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 28, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in [\"int64\", \"float64\"]:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.026858091354370117, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10398507118225098, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": false, "time": 0.00023508071899414062, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['number']).columns.isin([column]).all():\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[int, float])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10404396057128906, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 32, 34, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = data.copy()\n    if df.empty or df[~df.apply(pd.Series.is_numeric)].empty:\n        df = df.drop(column, axis=\"columns\", inplace=False)\n    df = df.select_dtypes(include=['number'])\n    if len(df.columns) < 2:\n        return None\n    return sns.heatmap(df.corr()).set(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024255037307739258, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 30, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or df.isnull().all().any():\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\"), ax=ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.10398507118225098, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34, 33, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df) == 0:\n        df = df.drop([column], axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if df.empty:\n        return\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype == object:\n        df = df.drop(column, axis=\"columns\")\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.024766921997070312, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=np.number)\n    if len(df.columns) == 0 or len(df.columns) <= 1:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.023463010787963867, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 28, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=[\"number\"])\n    if not df.empty:\n        return None\n    return sns.heatmap(", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(column, axis=1)\n    df = df.select_dtypes(include=\"number\")\n    if not df.empty:\n        return\n    return sns.heatmap(df.corr(), annot=True, fmt=\"\", cmap='coolwarm', ax=None)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if len(df) == 0:\n        return None\n    return sns.heatmap(df.corr(), annot=True, cmap=\"Blues\"), df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if column in df.columns:\n        df = df.drop(columns=column)\n    df = df.select_dtypes(include=[\"number\"])\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"coolwarm\", square=True, fmt=\"\")", "compilation_passed": true, "time": 0.12514591217041016, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 33, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty or df[column].dtype.name not in \"float32\":\n        df = df.drop(columns=column)\n    df = df.select_dtypes(\"number\")\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap=\"RdYlGn\")<|endoftext|># Task 12.1", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if df.empty:\n        df = df.drop(columns=column)\n    df = df[df.select_dtypes(\"number\").columns]\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 7.608064889907837, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data, column=\"c\"):\n    \"\"\"\n    Removes a column from a given data dictionary and creates a heatmap\n    of the correlation matrix of the remaining data. Non-numeric columns are\n    excluded from the heatmap. If the data is empty or has no numeric columns,\n    the function returns None.\n\n    Parameters:\n    - data: The input data dictionary.\n    - column (str): Name of column to remove. Defaults to \"c\".\n\n    Returns:\n    - matplotlib.axes._axes.Axes or None: The Axes object of the heatmap\n      or None if the heatmap is not generated.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Example:\n    >>> task_func({'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]})\n    <Axes: >\n    >>> task_func(pd.DataFrame({'a': [\"foo\", \"bar\"]}))\n    \"\"\"\n    df = pd.DataFrame(data)\n    if len(df.columns) == 0 or df[column].isnull().all():\n        df = df.drop(columns=column)\n    df = df.dropna()\n    if df.empty:\n        return None\n    return sns.heatmap(df.corr(), cmap='coolwarm')", "compilation_passed": true, "time": 0.025122880935668945, "tests_passed": true, "error": null}}
