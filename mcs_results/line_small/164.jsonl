{"selected_lines": [32, 34, 33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0022268295288085938, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.004370927810668945, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002912759780883789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0028820037841796875, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028100013732910156, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029571056365966797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007828950881958008, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003614187240600586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002905130386352539, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0016167163848876953, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008587121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['col1']\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029401779174804688, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028772354125976562, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.004193782806396484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028569698333740234, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = []\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, axes = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028181076049804688, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.002566814422607422, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028181076049804688, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0015418529510498047, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007323741912841797, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0014290809631347656, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0014147758483886719, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.009203910827636719, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.010070085525512695, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 33, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0024671554565429688, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029401779174804688, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 33, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002897977828979492, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.002534151077270508, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum(axis=1, inplace=True)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0015671253204345703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = ['col1']\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum(axis=1, inplace=True)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006461143493652344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": false, "time": 0.00020360946655273438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": false, "time": 0.00020360946655273438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.008099079132080078, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002747058868408203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0016210079193115234, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0036859512329101562, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0014128684997558594, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007779121398925781, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 29, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.001611948013305664, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0015387535095214844, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008024215698242188, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.001641988754272461, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.001360177993774414, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.009203910827636719, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029456615447998047, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0017020702362060547, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.002238035202026367, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.002613067626953125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002843141555786133, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.001447916030883789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0015971660614013672, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0017879009246826172, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028138160705566406, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0014920234680175781, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.010070085525512695, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.011816978454589844, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.013944149017333984, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.004130840301513672, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002783060073852539, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0014257431030273438, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0014739036560058594, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.001544952392578125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0016009807586669922, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.001470804214477539, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0016160011291503906, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0044558048248291016, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006711006164550781, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0075190067291259766, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007828950881958008, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034308433532714844, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0013949871063232422, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['col1'] * num_labels\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0015709400177001953, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003484010696411133, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002796173095703125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0020668506622314453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027971267700195312, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00810384750366211, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029020309448242188, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.001354217529296875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0013339519500732422, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0016808509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.001377105712890625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 31, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.013913869857788086, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0016269683837890625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.004439115524291992, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0015060901641845703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0015528202056884766, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0015909671783447266, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0013430118560791016, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002743244171142578, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0033059120178222656, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0014040470123291016, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1'] * num_labels\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0037899017333984375, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026412010192871094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026760101318359375, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.009034872055053711, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.00940084457397461, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.012140035629272461, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34, 30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0012791156768798828, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.001477956771850586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007210969924926758, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.01660299301147461, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31, 34, 33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0013260841369628906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0013701915740966797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.002096891403198242, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002583026885986328, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008038043975830078, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002729177474975586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.015563011169433594, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002732992172241211, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0013470649719238281, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.001561880111694336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.001386880874633789, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0032901763916015625, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027751922607421875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00131988525390625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 33, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003314971923828125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006523847579956055, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0014920234680175781, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot.bar(stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007570743560791016, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0015208721160888672, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003818035125732422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0014700889587402344, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0025877952575683594, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00138092041015625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002725839614868164, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003298044204711914, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.013580083847045898, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0033321380615234375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.001499176025390625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 29, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028679370880126953, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026998519897460938, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003437042236328125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0013971328735351562, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, axes = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.013022184371948242, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0019910335540771484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002905130386352539, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.008858203887939453, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": false, "time": 0.00043010711669921875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.01208186149597168, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.012081146240234375, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027048587799072266, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0033550262451171875, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007904052734375, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.012140035629272461, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 34, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.001394033432006836, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034308433532714844, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.009203910827636719, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.00133514404296875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0013952255249023438, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.012140035629272461, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003081083297729492, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034258365631103516, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003818035125732422, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0013821125030517578, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0017740726470947266, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002758026123046875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007271766662597656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002803802490234375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.013785123825073242, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.01699376106262207, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.012138128280639648, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.015563011169433594, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027501583099365234, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006523847579956055, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.002132892608642578, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": false, "time": 0.00020360946655273438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0013399124145507812, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0017468929290771484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.001682281494140625, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007247209548950195, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027740001678466797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029401779174804688, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0031518936157226562, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00852203369140625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0013439655303955078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.015543937683105469, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.004221200942993164, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, axes = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0014390945434570312, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002633333206176758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0012309551239013672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.001657247543334961, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.02440810203552246, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 34, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 29, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0015292167663574219, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0013527870178222656, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026810169219970703, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.015234947204589844, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0015971660614013672, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.001814126968383789, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028028488159179688, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.01699376106262207, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, axes = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0013821125030517578, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007426023483276367, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.001529693603515625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1']\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot.bar(stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026628971099853516, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.009071826934814453, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0030450820922851562, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = []\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0019011497497558594, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0024530887603759766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = ['col1']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002724170684814453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 34, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = []\n    data = pd.DataFrame(\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0014600753784179688, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034258365631103516, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.001505136489868164, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0030210018157958984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0014200210571289062, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0039637088775634766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 29, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.012330293655395508, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003303050994873047, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.036110877990722656, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 34, 29, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0030672550201416016, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002870798110961914, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007942914962768555, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0030210018157958984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0014200210571289062, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.023166894912719727, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0038487911224365234, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003059864044189453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026388168334960938, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, axes = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007836103439331055, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(\n    fig, axes = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007034778594970703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026700496673583984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007239103317260742, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0033478736877441406, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029571056365966797, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0015649795532226562, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026209354400634766, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 29, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0013439655303955078, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.008099079132080078, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 29, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0025811195373535156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002732992172241211, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003374814987182617, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0014040470123291016, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0016529560089111328, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0013320446014404297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034101009368896484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003345966339111328, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0015439987182617188, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0012829303741455078, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034799575805664062, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002633333206176758, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.01660299301147461, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028679370880126953, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007023334503173828, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.015234947204589844, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.009902000427246094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0033369064331054688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0032901763916015625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034101009368896484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0013737678527832031, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = []\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0024330615997314453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from math import pi", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0013461112976074219, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002747058868408203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0012938976287841797, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0020301342010498047, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027060508728027344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.012330293655395508, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007580757141113281, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig", "compilation_passed": true, "time": 0.0013539791107177734, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0012278556823730469, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 32, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002627134323120117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>from .._base import _BaseVisualization", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006654024124145508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007836103439331055, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 29, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0026090145111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = ['A', 'B']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.randint(*data_range, size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007904052734375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0065920352935791016, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.Series(np.random.uniform(data_range[0], data_range[1], size=num_labels))\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0012791156768798828, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.017697811126708984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.004520893096923828, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007904052734375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002557992935180664, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 31, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.00812077522277832, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007904052734375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"cat%d\" % i for i in range(num_labels)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = []\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0013659000396728516, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 31, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0013649463653564453, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0032930374145507812, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027348995208740234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 29, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0028679370880126953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002905130386352539, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.003792285919189453, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.barh(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.010070085525512695, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.007836103439331055, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(6, 3), layout='vertical', num=num_labels)\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax, color='#888888')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0016160011291503906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029401779174804688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002572774887084961, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.009902000427246094, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008570194244384766, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 33, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(pd.random.randint(*data_range, num_labels),\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], (100, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0025501251220703125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.cumsum(axis=1, inplace=True)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['group_A', 'group_B']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0014569759368896484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['col1']\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0013859272003173828, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": false, "time": 0.00043010711669921875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.001544952392578125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().plot(kind='bar')\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, axes = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0013949871063232422, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = []\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [\"label_%s\" % i for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0012791156768798828, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(5 * num_labels, 5))\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.001965045928955078, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0034308433532714844, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15)  # To get the same random numbers for every call\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0013549327850341797, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0013241767883300781, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels)\n    data.cumsum().plot(ax=ax, stacked=True, alpha=0.75, color=\"k\")\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0029401779174804688, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame({column: np.random.randint(*data_range, 5) for column in columns})\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>def is_even(number: int) -> bool:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(43210)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.random(num_labels), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots(1, num_labels, figsize=(12, 4))\n    data.cumsum().cumsum().sort_index().plot.bar(ax=ax, stacked=True, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0013668537139892578, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots(figsize=(5, 3))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0032901763916015625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(pd.random.uniform(0, 1, 10), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Random Data')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['A', 'B', 'C', 'D', 'E']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = {col: np.random.uniform(data_range[0], data_range[1], (500, )) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind=\"bar\", stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.002870798110961914, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.010779857635498047, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Data1', 'Data2']\n    data = {column: np.random.uniform(data_range[0], data_range[1], (1000, 1)) for column in columns}\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|># \uc785\ub825 \ubc0f \ucd9c\ub825", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 29, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Data1', 'Data2']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0, skipna=True, min_count=1).cumsum(axis=1, skipna=True, min_count=1).plot(ax=ax, kind='bar', stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0014090538024902344, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = {col: np.random.choice(range(data_range[0], data_range[1]), 10) for col in columns}\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008587121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(ax=ax, stacked=True, rot=30, yerr='sem')\n    return fig", "compilation_passed": true, "time": 0.0016169548034667969, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(columns=['Category', 'Data'])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(low=data_range[0], high=data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import matplotlib.pyplot as plt", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0025789737701416016, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(nrows=1, ncols=num_labels, figsize=(24, 24), dpi=72, layout='auto')\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.008587121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006530046463012695, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(\n    fig, axes = plt.subplots(1, num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column_{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['Group 1', 'Group 2', 'Group 3', 'Group 4', 'Group 5']\n    data = {col: np.random.uniform(data_range[0], data_range[1], 10) for col in columns}\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, size=(num_labels, 100000)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34, 33, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['category_' + str(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(1, num_labels, figsize=(15, 5), constrained_layout=True)\n    data.cumsum().cumsum().plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = pd.DataFrame(np.random.uniform(*data_range, size=(num_labels, 2))).T\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 5))\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f\"Column{i}\" for i in range(1, 101)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 5, 10), squeeze=False)\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29, 34, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2023)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import random", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 29, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, ax = plt.subplots(figsize=(16, 8), dpi=150)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 31], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(*data_range, (1000, num_labels)))\n    fig, axes = plt.subplots(ncols=num_labels, figsize=(10, 2 * num_labels))\n    data.cumsum(axis=0).plot(ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 31, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, title='Random Distribution')\n    return fig", "compilation_passed": true, "time": 0.002246856689453125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 34, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Column {i}\" for i in range(1, num_labels+1)]\n    data = pd.DataFrame(data={columns[i]: np.random.uniform(data_range[0], data_range[1], np.random.randint(10, 50)) for i in range(num_labels)})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Label{i}\" for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0027129650115966797, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10', 'C11', 'C12', 'C13', 'C14', 'C15',\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.010560035705566406, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.Series(index=columns, data=np.random.random(num_labels))\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axs = plt.subplots(nrows=num_labels, ncols=num_labels, figsize=(3 * num_labels, 3 * num_labels))\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['cat_'+str(i+1) for i in range(num_labels)]\n    data = np.random.random(num_labels) * (data_range[1] - data_range[0]) + data_range[0]\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(stacked=True, ax=ax, color=plt.cm.Set1(np.arange(num_labels)), rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 32, 34], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Group {i}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.randint(data_range[0], data_range[1], size=(10, num_labels)),\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1538)  # Fix the seed for reproducibility\n    columns = ['col1']\n    data = pd.DataFrame(np.random.uniform(low=data_range[0], high=data_range[1], size=(100, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(134567)\n    columns = ['column_{}'.format(i) for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1).plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0030829906463623047, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29, 34, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['col1'] * num_labels\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.cumsum().plot.bar(ax=ax, stacked=True, title='Stacked Bar Chart')\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots(1, num_labels, figsize=(num_labels * 1.5, 12))\n    data.cumsum(axis=0, skipna=False).cumsum(axis=1, skipna=False).plot.bar(stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 30, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f\"Column {x}\" for x in range(1, num_labels + 1)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(25, num_labels)), columns=columns)\n    fig, ax = plt.subplots(figsize=(20, 10), nrows=1, ncols=num_labels)\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 33, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = ['label_1', 'label_2', 'label_3']\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot.bar(ax=ax, stacked=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = ['Group A', 'Group B', 'Group C']\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum(axis=1, inplace=True)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0076160430908203125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)  # Ensure consistent randomness across different executions\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, axes = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 32], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [f'Label{i + 1}' for i in range(num_labels)]\n    data = pd.DataFrame(columns=columns)\n    fig, axs = plt.subplots(figsize=(15, 15), nrows=num_labels, ncols=num_labels, sharex=True, sharey=True,\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(0)\n    columns = [f\"Category{i}\" for i in range(1, num_labels + 1)]\n    data = pd.DataFrame([np.random.randint(*data_range, size=num_labels) for _ in range(100)], columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.006092071533203125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(1342598)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 30, 33], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)\n    columns = [\"Candy 1\", \"Candy 2\", \"Candy 3\", \"Candy 4\", \"Candy 5\"]\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax, rot=0)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(42)  # Ensure consistent random number generation across function calls\n    columns = []\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34, 31, 30], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(2022)\n    columns = [\"C1\", \"C2\", \"C3\"]\n    data = pd.DataFrame({c: np.random.randint(*data_range, size=100) for c in columns})\n    fig, ax = plt.subplots()\n    data.cumsum().plot(kind='bar', stacked=True, ax=ax)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29], "result": {"code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef task_func(num_labels=5, data_range=(0, 1)):\n    \"\"\"\n    Generate random numeric data across a specified range for a given number of categories and visualize it with\n     a stacked bar chart.\n\n    Parameters:\n    num_labels (int): Specifies the number of distinct categories or labels to generate data for. Defaults to 5.\n    data_range (tuple): Defines the lower and upper bounds for the random data values. Defaults to (0, 1).\n\n    Returns:\n    matplotlib.figure.Figure: A Figure object containing the stacked bar chart of the generated data.\n\n    Requirements:\n    - pandas\n    - matplotlib\n    - numpy\n\n    Example:\n    >>> fig = task_func()\n    >>> fig.show()  # This will display the figure with default parameters\n\n    >>> fig = task_func(num_labels=3, data_range=(1, 10))\n    >>> fig.show()  # This will display the figure with three labels and data range from 1 to 10\n    \"\"\"\n    np.random.seed(15381238)\n    columns = pd.MultiIndex.from_product([[\"Race\", \"Gender\", \"Age\"], range(1, num_labels + 1)])\n    data = pd.DataFrame(np.random.uniform(data_range[0], data_range[1], size=(num_labels, num_labels)), columns=columns)\n    fig, ax = plt.subplots()\n    data.cumsum().plot.bar(ax=ax, stacked=True, rot=90)\n    return fig", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
