{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 26, 37, 28, 35, 38, 27, 36, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [26, 37, 32, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.009029150009155273, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 31, 30, 37, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034630298614501953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 31, 27, 32, 37, 28, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 26, 32, 27, 30, 37, 29, 33, 38, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010840892791748047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 35, 27, 38, 31, 36, 37, 28, 33, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003381013870239258, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 36, 29, 27, 28, 37, 31, 38, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 29, 36, 33, 32, 28, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 27, 38, 31, 36, 37, 28, 33, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003381013870239258, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37, 33, 26, 35, 38, 32, 27, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 30, 32, 38, 27, 36, 28, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 35, 28, 36, 26, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003293752670288086, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.008131027221679688, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 38, 30, 27, 36, 32, 29, 26, 35, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031931400299072266, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 37, 29, 38, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003220796585083008, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 31, 26, 32, 28, 38, 33, 29, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010907649993896484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008168935775756836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003081083297729492, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 38, 36, 37, 31, 26, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 38, 30, 29, 28, 35, 27, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 29, 38, 28, 33, 35, 32, 26, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030813217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031862258911132812, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 30, 38, 28, 27, 33, 29, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 36, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003120899200439453, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 35, 29, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 27, 33, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 27, 33, 26, 35, 29, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 35, 30, 28, 36, 29, 32, 37, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003145933151245117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 32, 29, 38, 33, 37, 26, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 26, 27, 28, 35, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 36, 26, 28, 37, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 38, 29, 36, 32, 37, 35, 27, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 27, 28, 30, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031151771545410156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 32, 38, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.001032114028930664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 26, 32, 31, 28, 30, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 31, 32, 36, 26, 33, 38, 35, 28, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.001165151596069336, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 37, 33, 36, 29, 32, 38, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003077268600463867, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00875997543334961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 27, 35, 26, 38, 28, 33, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034940242767333984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 33, 32, 30, 37, 28, 27, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 38, 33, 28, 32, 36, 29, 26, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 35, 36, 30, 32, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0041120052337646484, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 37, 36, 28, 29, 32, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 35, 28, 38, 31, 32, 27, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 30, 33, 26, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 32, 35, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003086090087890625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 35, 36, 28, 30, 26, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 26, 28, 30, 35, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031981468200683594, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00816202163696289, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 33, 38, 35, 30, 29, 26, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 35, 31, 32, 29, 37, 30, 33, 38, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010712146759033203, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [26, 35, 32, 38, 36, 28, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0032787322998046875, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 32, 35, 37, 36, 29, 30, 27, 33, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0030748844146728516, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 31, 30, 37, 38, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 31, 28, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031538009643554688, "tests_passed": true, "error": null}}
{"selected_lines": [37, 27, 38, 31, 26, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 28, 38, 37, 30, 35, 29, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010161399841308594, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.005359172821044922, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [26, 29, 28, 38, 27, 31, 33, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 32, 30, 33, 31, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0032358169555664062, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 31, 36, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 38, 31, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003113985061645508, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 28, 31, 27, 32, 26, 37, 33, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030689239501953125, "tests_passed": true, "error": null}}
{"selected_lines": [26, 28, 37, 29, 33, 30, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 36, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030579566955566406, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 33, 38, 30, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 35, 37, 30, 29, 31, 32, 36, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 36, 32, 37, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0032210350036621094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 36, 26, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 26, 31, 27, 28, 36, 37, 38, 29, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.003036022186279297, "tests_passed": true, "error": null}}
{"selected_lines": [26, 38, 29, 35, 36, 32, 28, 27, 33, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 29, 30, 37, 27, 32, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031681060791015625, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 36, 27, 30, 33, 26, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 31, 37, 32, 27, 36, 28, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035247802734375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 38, 31, 33, 36, 32, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.004032135009765625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 38, 35, 28, 33, 26, 30, 31, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 27, 37, 29, 35, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034720897674560547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 26, 28, 29, 27, 31, 35, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 28, 33, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010068416595458984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 28, 36, 27, 30, 29, 32, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003147125244140625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 28, 29, 38, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030350685119628906, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.008374929428100586, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 35, 36, 31, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009908676147460938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 36, 28, 26, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 26, 35, 38, 36, 28, 33, 32, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031452178955078125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 38, 30, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 33, 26, 37, 31, 32, 36, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003094196319580078, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031201839447021484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 27, 35, 36, 31, 28, 37, 29, 38, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008630037307739258, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 27, 35, 26, 38, 28, 33, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034940242767333984, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008653879165649414, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 28, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0031228065490722656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 27, 26, 32, 38, 37, 28, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.003070831298828125, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [27, 36, 26, 29, 37, 38, 32, 30, 31, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031919479370117188, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008653879165649414, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 32, 29, 37, 33, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 29, 36, 32, 28, 37, 30, 38, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 27, 36, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 37, 36, 33, 31, 38, 35, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 31, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 35, 28, 37, 33, 38, 31, 29, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 27, 30, 37, 29, 26, 31, 28, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 28, 29, 31, 26, 35, 27, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.00400996208190918, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 29, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 29, 31, 38, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00321197509765625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 38, 33, 29, 26, 32, 37, 36, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031957626342773438, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 32, 33, 30, 37, 31, 35, 27, 26, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 37, 27, 35, 28, 26, 33, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031058788299560547, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 35, 36, 31, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009908676147460938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 35, 38, 33, 36, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003062009811401367, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 27, 36, 32, 35, 37, 26, 29, 30, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 33, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 27, 30, 28, 35, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031871795654296875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [26, 37, 31, 35, 32, 38, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.003091096878051758, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 29, 36, 37, 35, 31, 33, 27, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.003222942352294922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 38, 29, 27, 30, 36, 26, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008169889450073242, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 31, 30, 37, 26, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 33, 30, 27, 31, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 37, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030410289764404297, "tests_passed": true, "error": null}}
{"selected_lines": [27, 37, 30, 26, 28, 33, 38, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.00315093994140625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 27, 35, 26, 38, 28, 33, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034940242767333984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 38, 37, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.006363868713378906, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [37, 36, 30, 33, 26, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008360862731933594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 29, 31, 33, 27, 32, 28, 26, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.002974987030029297, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 38, 35, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003003835678100586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003088235855102539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 27, 37, 26, 28, 35, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.006654262542724609, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 32, 29, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 38, 29, 32, 33, 36, 35, 31, 28, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 31, 28, 30, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031409263610839844, "tests_passed": true, "error": null}}
{"selected_lines": [27, 35, 28, 26, 37, 32, 33, 31, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030558109283447266, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 28, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0031228065490722656, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.009029150009155273, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 28, 38, 29, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 35, 27, 28, 38, 26, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 30, 26, 32, 29, 38, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010199546813964844, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0065460205078125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28, 38, 29, 30, 37, 27, 32, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031681060791015625, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 35, 36, 31, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009908676147460938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38, 37, 33, 29, 35, 32, 26, 31, 27, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 35, 28, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031197071075439453, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 28, 35, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003053903579711914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33, 26, 32, 29, 30, 27, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00852203369140625, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 37, 35, 36, 30, 29, 32, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.001026153564453125, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38, 33, 27, 35, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031938552856445312, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 28, 31, 36, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003149747848510742, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 36, 35, 26, 31, 29, 30, 33, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 29, 37, 26, 30, 33, 36, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 29, 30, 27, 31, 26, 33, 35, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009839534759521484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 29, 38, 30, 36, 32, 26, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 37, 30, 38, 32, 26, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 36, 32, 35, 37, 27, 31, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010020732879638672, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 38, 26, 32, 36, 35, 30, 28, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 32, 38, 33, 28, 37, 35, 36, 27, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 37, 35, 33, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031599998474121094, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 29, 30, 37, 32, 27, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010209083557128906, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.008717060089111328, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 26, 28, 29, 27, 31, 35, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 29, 35, 30, 27, 37, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031549930572509766, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 27, 35, 31, 32, 33, 28, 38, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031321048736572266, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 38, 37, 36, 27, 30, 26, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 30, 28, 36, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003126859664916992, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 28, 27, 35, 36, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030579566955566406, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 27, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008360862731933594, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 32, 29, 26, 33, 30, 37, 27, 36, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.005359172821044922, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00816202163696289, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 35, 32, 29, 27, 37, 26, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.003320932388305664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 31, 37, 32, 38, 27, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 37, 32, 36, 35, 27, 29, 28, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003970146179199219, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 27, 36, 32, 29, 26, 31, 33, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035741329193115234, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 31, 32, 38, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 33, 29, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034248828887939453, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 30, 37, 31, 27, 29, 36, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010180473327636719, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38, 33, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 37, 36, 33, 35, 31, 26, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30, 29, 32, 36, 35, 33, 28, 37, 27, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.00102996826171875, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 37, 28, 33, 30, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 30, 32, 38, 26, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031871795654296875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 30, 29, 37, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009720325469970703, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 32, 30, 36, 27, 31, 29, 38, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 26, 29, 32, 31, 27, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031659603118896484, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 26, 30, 33, 37, 27, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0030651092529296875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 38, 35, 32, 33, 28, 29, 26, 31, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030908584594726562, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 32, 27, 35, 31, 30, 37, 36, 28, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010960102081298828, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 28, 36, 31, 37, 35, 27, 29, 33, 38, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 28, 31, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 32, 26, 27, 28, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 33, 35, 36, 29, 26, 30, 32, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00816202163696289, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 33, 27, 35, 30, 32, 38, 37, 28, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.00308990478515625, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 27, 29, 37, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031900405883789062, "tests_passed": true, "error": null}}
{"selected_lines": [29, 26, 28, 36, 31, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 33, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 30, 38, 31, 29, 28, 26, 33, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 29, 36, 32, 28, 33, 30, 35, 38, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 33, 37, 29, 26, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031821727752685547, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 29, 31, 26, 33, 38, 30, 37, 27, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0010328292846679688, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 38, 35, 27, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0030608177185058594, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00860905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 31, 37, 35, 29, 27, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 37, 27, 32, 26, 30, 31, 35, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003133058547973633, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 31, 28, 30, 33, 29, 32, 38, 36, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008705854415893555, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 35, 36, 31, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009908676147460938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 32, 36, 33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003086090087890625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 30, 28, 27, 31, 32, 33, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009970664978027344, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 31, 26, 37, 33, 30, 36, 38, 29, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return json_file", "compilation_passed": true, "time": 0.003103017807006836, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 35, 38, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 35, 30, 29, 27, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035321712493896484, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 30, 27, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 31, 37, 35, 29, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0038299560546875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 28, 35, 26, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008653879165649414, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 27, 36, 32, 29, 26, 31, 33, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035741329193115234, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 27, 28, 30, 26, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.008717060089111328, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 33, 36, 26, 28, 38, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 30, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003088235855102539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 27, 36, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00875711441040039, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 31, 32, 27, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0032579898834228516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [26, 38, 33, 36, 35, 30, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003100872039794922, "tests_passed": true, "error": null}}
{"selected_lines": [26, 37, 31, 38, 36, 30, 35, 28, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 26, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003094196319580078, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30, 32, 27, 26, 29, 37, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 28, 29, 38, 30, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030677318572998047, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 26, 33, 29, 31, 30, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31, 33, 36, 27, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030667781829833984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 28, 38, 35, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 32, 31, 28, 27, 35, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 37, 33, 38, 30, 31, 27, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010831356048583984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 36, 32, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 35, 36, 31, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009908676147460938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 35, 37, 27, 28, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 30, 26, 27, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030951499938964844, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 31, 37, 35, 32, 26, 36, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003058195114135742, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 26, 29, 30, 37, 35, 27, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010790824890136719, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 37, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031201839447021484, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 27, 38, 37, 30, 29, 32, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 27, 32, 26, 30, 38, 35, 37, 33, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 30, 38, 29, 28, 32, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003010988235473633, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 29, 26, 32, 37, 38, 35, 31, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003152132034301758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 38, 37, 36, 33, 28, 29, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010080337524414062, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [26, 29, 32, 35, 36, 38, 30, 31, 28, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 31, 30, 32, 37, 36, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 35, 27, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031099319458007812, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 26, 27, 29, 38, 33, 28, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0034008026123046875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 38, 31, 33, 36, 32, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.004032135009765625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 26, 31, 36, 37, 33, 27, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.001104116439819336, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 28, 35, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003053903579711914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 29, 32, 35, 27, 26, 38, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 37, 29, 38, 30, 31, 26, 36, 35, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003942966461181641, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031480789184570312, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 38, 35, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035462379455566406, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008321046829223633, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 26, 38, 30, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 37, 36, 30, 38, 32, 28, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031211376190185547, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 29, 26, 32, 37, 38, 35, 31, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003152132034301758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 32, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003202676773071289, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 38, 26, 37, 36, 30, 29, 35, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010159015655517578, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 26, 37, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003136157989501953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 37, 27, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003100872039794922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 38, 26, 30, 32, 29, 31, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003197193145751953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 26, 30, 28, 32, 38, 27, 33, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 36, 30, 37, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 36, 35, 32, 29, 33, 27, 38, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.006139993667602539, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 27, 38, 31, 26, 36, 32, 33, 29, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 27, 30, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031087398529052734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008360862731933594, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 36, 28, 37, 31, 38, 26, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 27, 26, 37, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008711099624633789, "tests_passed": true, "error": null}}
{"selected_lines": [27, 35, 28, 26, 37, 32, 33, 31, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030558109283447266, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 27, 38, 31, 36, 37, 28, 33, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003381013870239258, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 38, 36, 33, 35, 28, 30, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 36, 33, 32, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 27, 29, 37, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031900405883789062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 29, 26, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 26, 27, 30, 29, 33, 31, 35, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 38, 31, 33, 36, 37, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 26, 28, 37, 35, 32, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 35, 31, 33, 26, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029261112213134766, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 31, 36, 37, 35, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 38, 31, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003113985061645508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 38, 31, 37, 30, 29, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 33, 26, 32, 38, 29, 31, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 37, 36, 32, 38, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029897689819335938, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 37, 33, 27, 35, 36, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031249523162841797, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 37, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0032460689544677734, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.004240751266479492, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 27, 31, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 27, 30, 35, 32, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 26, 38, 31, 30, 35, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 27, 28, 35, 32, 26, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034780502319335938, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 33, 30, 31, 36, 38, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 38, 37, 33, 26, 27, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003108978271484375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 27, 31, 26, 35, 37, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003093719482421875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031480789184570312, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 27, 38, 26, 37, 32, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 27, 30, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 28, 26, 38, 33, 30, 29, 32, 35, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 27, 35, 31, 37, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003147125244140625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 32, 30, 27, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 30, 26, 33, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.005349159240722656, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 32, 29, 35, 38, 27, 31, 26, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003197908401489258, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 32, 31, 27, 26, 28, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 38, 31, 35, 37, 33, 27, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 35, 38, 28, 27, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.003271341323852539, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 33, 30, 35, 28, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003026247024536133, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 35, 30, 26, 33, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031280517578125, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00875711441040039, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 27, 30, 38, 26, 28, 32, 29, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010411739349365234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 26, 29, 30, 31, 37, 27, 33, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 36, 28, 27, 31, 26, 37, 38, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031871795654296875, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 30, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0030319690704345703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003178119659423828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 27, 37, 36, 38, 29, 26, 33, 32, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 27, 37, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030701160430908203, "tests_passed": true, "error": null}}
{"selected_lines": [38, 28, 36, 35, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29, 35, 37, 30, 33, 27, 31, 32, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 35, 28, 27, 33, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 28, 30, 26, 38, 35, 33, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 37, 36, 35, 27, 31, 32, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010311603546142578, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 31, 26, 30, 38, 33, 28, 29, 37, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.003253936767578125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 35, 29, 28, 27, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 29, 30, 27, 35, 38, 33, 36, 28, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003920316696166992, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003081083297729492, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 38, 26, 30, 28, 29, 31, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 29, 27, 37, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0036542415618896484, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 38, 35, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003003835678100586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 26, 28, 29, 27, 31, 35, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031480789184570312, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008705854415893555, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 26, 33, 36, 28, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008360862731933594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0011358261108398438, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 26, 32, 38, 37, 29, 28, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003041982650756836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 27, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030710697174072266, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 27, 28, 29, 37, 33, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003437042236328125, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00889897346496582, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008669853210449219, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 27, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 35, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0033278465270996094, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031201839447021484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 36, 27, 28, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031290054321289062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 30, 35, 32, 29, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031490325927734375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 31, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030999183654785156, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 36, 32, 35, 37, 27, 31, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010020732879638672, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 37, 33, 29, 38, 28, 26, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 27, 33, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 27, 31, 38, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 26, 35, 37, 38, 28, 27, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0030548572540283203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 26, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 38, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010480880737304688, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38, 27, 26, 29, 35, 37, 36, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 31, 27, 35, 38, 33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31, 30, 26, 27, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030770301818847656, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 30, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008705854415893555, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 33, 30, 36, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 27, 35, 26, 38, 28, 33, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034940242767333984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 38, 35, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003003835678100586, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008705854415893555, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 26, 32, 33, 31, 36, 28, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 28, 38, 32, 37, 36, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003101348876953125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 35, 26, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031702518463134766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 33, 30, 32, 28, 36, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029768943786621094, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 27, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035300254821777344, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 37, 33, 35, 31, 30, 26, 27, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 28, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 32, 28, 26, 29, 33, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008443117141723633, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 32, 27, 29, 35, 37, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 37, 26, 32, 27, 31, 29, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003991603851318359, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 33, 38, 28, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 32, 37, 38, 30, 28, 26, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 28, 32, 30, 31, 37, 26, 36, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003231048583984375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 38, 31, 33, 36, 30, 29, 37, 35, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.002997875213623047, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 29, 28, 27, 37, 38, 30, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return json_file", "compilation_passed": true, "time": 0.0010879039764404297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00852203369140625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.008131027221679688, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.006654262542724609, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 32, 36, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 27, 33, 28, 30, 31, 26, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 36, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003098011016845703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008168935775756836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35, 37, 33, 28, 29, 30, 31, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010221004486083984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 35, 36, 26, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003216266632080078, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 33, 38, 29, 36, 37, 30, 27, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003061056137084961, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 31, 26, 37, 29, 30, 35, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030641555786132812, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003091096878051758, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0065460205078125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 32, 28, 38, 27, 31, 37, 36, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030031204223632812, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 32, 36, 38, 31, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 26, 36, 32, 33, 35, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 36, 26, 35, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003092050552368164, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 29, 35, 33, 30, 38, 37, 32, 28, 27, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 33, 36, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 35, 31, 32, 38, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003197908401489258, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 37, 29, 26, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031821727752685547, "tests_passed": true, "error": null}}
{"selected_lines": [26, 35, 38, 27, 29, 30, 32, 37, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 30, 32, 35, 28, 29, 26, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0011429786682128906, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [26, 32, 38, 27, 35, 31, 37, 33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008360862731933594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 29, 28, 35, 32, 27, 31, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 37, 26, 36, 29, 27, 33, 28, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 27, 36, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003114938735961914, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 26, 35, 37, 27, 36, 38, 32, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.0031418800354003906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 32, 28, 29, 31, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 33, 30, 35, 38, 26, 29, 32, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 38, 27, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0038950443267822266, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 27, 31, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32, 33, 36, 37, 26, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003983736038208008, "tests_passed": true, "error": null}}
{"selected_lines": [27, 35, 28, 26, 37, 32, 33, 31, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030558109283447266, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 32, 33, 28, 36, 27, 37, 26, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 26, 31, 28, 29, 38, 30, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0031599998474121094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 27, 29, 38, 31, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.001013040542602539, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 37, 31, 32, 26, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003077983856201172, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [26, 29, 28, 36, 27, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031499862670898438, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 35, 29, 31, 37, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030891895294189453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 27, 35, 26, 38, 28, 33, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034940242767333984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031130313873291016, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 28, 26, 27, 30, 35, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 38, 26, 30, 32, 29, 31, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003197193145751953, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 31, 30, 37, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034630298614501953, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 33, 26, 28, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003489971160888672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 38, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0030748844146728516, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00889897346496582, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 27, 38, 26, 33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33, 30, 32, 38, 36, 35, 26, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009872913360595703, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 32, 26, 38, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 28, 35, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003053903579711914, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 30, 31, 38, 35, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 27, 38, 31, 36, 37, 28, 33, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003381013870239258, "tests_passed": true, "error": null}}
{"selected_lines": [27, 37, 29, 26, 28, 33, 38, 35, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010590553283691406, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008630037307739258, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 27, 30, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 26, 30, 29, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 28, 36, 30, 35, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003174304962158203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 32, 35, 31, 26, 38, 36, 27, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003030061721801758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008360862731933594, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 30, 27, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 30, 33, 26, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 32, 38, 31, 37, 36, 35, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 36, 31, 32, 37, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 38, 26, 28, 29, 27, 31, 35, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 28, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0031228065490722656, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 37, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.003041982650756836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 32, 28, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0030248165130615234, "tests_passed": true, "error": null}}
{"selected_lines": [32, 26, 37, 27, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003136157989501953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 29, 30, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 26, 38, 32, 27, 35, 33, 28, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 27, 29, 30, 28, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030531883239746094, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.008131027221679688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 38, 29, 26, 28, 32, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00852203369140625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [27, 38, 29, 35, 36, 31, 28, 33, 32, 37, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 26, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 26, 29, 30, 37, 35, 27, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010790824890136719, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 37, 29, 32, 35, 27, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008567094802856445, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 37, 29, 38, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003220796585083008, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 37, 27, 28, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034589767456054688, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.006463050842285156, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38, 31, 30, 33, 28, 29, 32, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.004126071929931641, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 38, 29, 33, 27, 30, 28, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30, 31, 26, 33, 36, 38, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.004082202911376953, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 37, 32, 36, 26, 38, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003384828567504883, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029702186584472656, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 35, 26, 28, 36, 31, 27, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 31, 37, 35, 29, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0038299560546875, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 33, 29, 35, 37, 36, 38, 26, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031528472900390625, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 31, 38, 27, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 38, 33, 31, 26, 37, 32, 28, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030210018157958984, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 27, 37, 28, 30, 36, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29, 36, 31, 33, 30, 28, 27, 26, 37, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 29, 26, 27, 30, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00875711441040039, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 33, 36, 37, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030357837677001953, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 26, 27, 33, 38, 29, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0011010169982910156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 33, 38, 36, 29, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030808448791503906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32, 27, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003206968307495117, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008443117141723633, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 36, 32, 30, 35, 38, 37, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.008131027221679688, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29, 33, 32, 26, 36, 38, 28, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 35, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034279823303222656, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.003704071044921875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 30, 29, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00875711441040039, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 37, 29, 30, 31, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030667781829833984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 26, 33, 32, 36, 30, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 37, 38, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003119230270385742, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 28, 27, 33, 31, 35, 36, 38, 26, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0033190250396728516, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 32, 27, 36, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003720998764038086, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008653879165649414, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 27, 36, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 38, 35, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003003835678100586, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 32, 27, 37, 26, 35, 33, 30, 31, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 30, 38, 29, 35, 36, 37, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 33, 29, 26, 32, 38, 36, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0041201114654541016, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 35, 26, 38, 27, 33, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003242969512939453, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33, 27, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 36, 31, 30, 32, 33, 37, 26, 35, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 29, 31, 26, 38, 37, 33, 35, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 27, 36, 29, 26, 28, 31, 32, 38, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 37, 38, 30, 36, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 38, 29, 37, 27, 28, 26, 32, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 28, 30, 36, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 26, 28, 32, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0033893585205078125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [27, 38, 33, 31, 26, 37, 32, 28, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030210018157958984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008437156677246094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 37, 29, 26, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031821727752685547, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 33, 27, 32, 26, 37, 28, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 26, 36, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030670166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 26, 32, 27, 36, 30, 29, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 32, 28, 35, 36, 31, 27, 26, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030999183654785156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 36, 38, 29, 26, 31, 37, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 35, 37, 33, 26, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003199338912963867, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 30, 36, 32, 38, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003113985061645508, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 27, 30, 29, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [27, 37, 28, 31, 30, 26, 29, 36, 35, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003103971481323242, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.008717060089111328, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 38, 32, 29, 33, 35, 31, 30, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034918785095214844, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 32, 35, 26, 33, 30, 31, 28, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.001051187515258789, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 37, 30, 31, 28, 33, 32, 36, 38, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 27, 28, 32, 31, 29, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003118753433227539, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003162860870361328, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 35, 26, 38, 27, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003133058547973633, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 32, 28, 35, 31, 38, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029859542846679688, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00842905044555664, "tests_passed": true, "error": null}}
{"selected_lines": [26, 31, 33, 27, 28, 36, 29, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 27, 28, 33, 30, 38, 26, 36, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.004014730453491211, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008705854415893555, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 35, 36, 31, 38, 29, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0009908676147460938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 37, 30, 28, 29, 31, 38, 35, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 35, 38, 31, 27, 28, 26, 33, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 37, 38, 33, 28, 30, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.004032135009765625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 26, 33, 35, 32, 38, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00889897346496582, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 27, 28, 37, 31, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 31, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030999183654785156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008321046829223633, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 38, 27, 30, 32, 29, 26, 37, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 38, 26, 36, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0036699771881103516, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 30, 38, 36, 35, 29, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 38, 31, 33, 36, 32, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.004032135009765625, "tests_passed": true, "error": null}}
{"selected_lines": [26, 29, 28, 36, 27, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031499862670898438, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 26, 32, 30, 37, 31, 35, 27, 29, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 33, 28, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030710697174072266, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030531883239746094, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 31, 26, 30, 35, 27, 36, 29, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 37, 31, 33, 27, 29, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 30, 29, 32, 28, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 30, 32, 27, 26, 29, 37, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 27, 35, 31, 36, 30, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 35, 36, 29, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 27, 38, 31, 36, 37, 28, 33, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003381013870239258, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 27, 36, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 38, 32, 33, 28, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003185272216796875, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 28, 30, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 28, 31, 37, 35, 32, 33, 36, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 30, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031020641326904297, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 32, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003092050552368164, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003161907196044922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 32, 36, 26, 33, 29, 30, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00102996826171875, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030851364135742188, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.008916854858398438, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 26, 29, 36, 38, 32, 37, 28, 35, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.000988006591796875, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 38, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003118276596069336, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 33, 36, 35, 38, 28, 29, 32, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 26, 32, 29, 31, 28, 30, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 35, 30, 31, 33, 26, 28, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 38, 32, 29, 30, 33, 37, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 33, 26, 32, 31, 35, 38, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 37, 29, 38, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003220796585083008, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 33, 30, 38, 27, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031189918518066406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 35, 31, 29, 27, 33, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003040790557861328, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 29, 32, 28, 26, 31, 33, 36, 27, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 27, 28, 38, 36, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0033309459686279297, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 30, 38, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.003582000732421875, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0011341571807861328, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 28, 33, 30, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008267879486083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 26, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 30, 26, 27, 37, 31, 32, 38, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 36, 28, 38, 27, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 38, 31, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003113985061645508, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 28, 32, 35, 36, 29, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 35, 27, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031099319458007812, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 27, 26, 30, 31, 37, 36, 32, 33, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 35, 36, 30, 32, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0041120052337646484, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 26, 38, 30, 32, 31, 29, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 31, 28, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031328201293945312, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 36, 38, 31, 28, 26, 32, 33, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0010979175567626953, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008168935775756836, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 38, 31, 37, 29, 30, 36, 28, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 38, 28, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00816202163696289, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.008374929428100586, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 27, 32, 35, 28, 37, 30, 36, 26, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003590106964111328, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00816202163696289, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 30, 37, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0037720203399658203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 27, 28, 30, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031151771545410156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 35, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0036520957946777344, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003590106964111328, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 36, 37, 33, 27, 32, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003103017807006836, "tests_passed": true, "error": null}}
{"selected_lines": [26, 28, 37, 33, 38, 30, 31, 27, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010831356048583984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 28, 31, 35, 38, 32, 29, 26, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00816202163696289, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.005578756332397461, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [35, 30, 28, 29, 38, 26, 32, 37, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 37, 26, 32, 38, 36, 33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 27, 35, 26, 38, 28, 33, 31, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034940242767333984, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 30, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 29, 26, 32, 37, 38, 35, 31, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003152132034301758, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 27, 26, 37, 35, 32, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003110170364379883, "tests_passed": true, "error": null}}
{"selected_lines": [26, 35, 32, 27, 29, 38, 30, 28, 36, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 29, 28, 26, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.009029150009155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 32, 30, 33, 31, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0032358169555664062, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 30, 26, 37, 38, 33, 32, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.008374929428100586, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 38, 31, 30, 37, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 30, 32, 31, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030782222747802734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 38, 27, 30, 31, 37, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.002980947494506836, "tests_passed": true, "error": null}}
{"selected_lines": [27, 37, 30, 26, 32, 31, 36, 33, 38, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031871795654296875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 26, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003092050552368164, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 32, 27, 38, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003088235855102539, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 30, 28, 27, 32, 35, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 27, 26, 38, 33, 37, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 33, 30, 27, 31, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 37, 29, 38, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003220796585083008, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 31, 28, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031538009643554688, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 33, 32, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 37, 35, 29, 31, 38, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00875711441040039, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 30, 38, 26, 37, 32, 31, 35, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.00889897346496582, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008502721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 26, 31, 28, 29, 38, 30, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0031599998474121094, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003083944320678711, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 35, 38, 27, 37, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0031118392944335938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 26, 37, 28, 38, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 26, 37, 30, 29, 27, 28, 33, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35, 38, 27, 30, 31, 37, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.002980947494506836, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 28, 26, 33, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0034270286560058594, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26, 30, 29, 32, 33, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010352134704589844, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 37, 29, 30, 27, 36, 32, 33, 26, 38, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 32, 27, 28, 38, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.003063201904296875, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 29, 30, 31, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 35, 29, 36, 33, 32, 30, 37, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 37, 32, 30, 26, 28, 38, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 35, 27, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 38, 31, 26, 29, 32, 33, 35, 37, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash  # save hash as string\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30, 27, 28, 26, 32, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0033829212188720703, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 37, 29, 38, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003220796585083008, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031938552856445312, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 35, 31, 27, 33, 37, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.00380706787109375, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 37, 28, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 31, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003988981246948242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031480789184570312, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 32, 27, 36, 30, 38, 35, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030798912048339844, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 31, 33, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003050088882446289, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 36, 33, 37, 35, 27, 29, 32, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 38, 26, 28, 29, 27, 31, 35, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [26, 29, 31, 28, 37, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 28, 33, 29, 26, 27, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031881332397460938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37, 27, 29, 28, 30, 36, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 26, 35, 27, 36, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 26, 27, 29, 32, 38, 36, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030260086059570312, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030291080474853516, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 26, 27, 33, 30, 35, 37, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.003100156784057617, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 37, 29, 26, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031821727752685547, "tests_passed": true, "error": null}}
{"selected_lines": [26, 29, 28, 36, 27, 32, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031499862670898438, "tests_passed": true, "error": null}}
{"selected_lines": [26, 28, 27, 32, 29, 37, 31, 30, 33, 38, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010428428649902344, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 30, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029959678649902344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 29, 31, 33, 27, 32, 28, 26, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.002974987030029297, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003103971481323242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 36, 29, 26, 30, 38, 27, 37, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003136157989501953, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 36, 37, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, sort_keys=True)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.008131027221679688, "tests_passed": true, "error": null}}
{"selected_lines": [26, 35, 28, 33, 37, 30, 32, 29, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010271072387695312, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 28, 26, 31, 36, 33, 27, 35, 29, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 29, 28, 33, 37, 38, 31, 27, 26, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0036520957946777344, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.008374929428100586, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 31, 29, 32, 35, 38, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 33, 28, 36, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030710697174072266, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 36, 32, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003106832504272461, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 30, 33, 26, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 26, 30, 29, 32, 33, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010352134704589844, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 35, 31, 28, 26, 33, 38, 29, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 38, 26, 31, 29, 35, 36, 33, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031538009643554688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 26, 35, 37, 30, 29, 31, 32, 36, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 27, 32, 29, 28, 26, 31, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 29, 35, 36, 30, 37, 33, 38, 32, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 26, 37, 31, 38, 29, 27, 30, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # compute SHA256 hash and convert to hexadecimal string\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 33, 38, 32, 26, 36, 28, 31, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = dict()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 37, 36, 32, 38, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0029897689819335938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 26, 28, 30, 38, 27, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030968189239501953, "tests_passed": true, "error": null}}
{"selected_lines": [27, 38, 35, 28, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030379295349121094, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 37, 29, 27, 33, 30, 38, 32, 36, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 27, 28, 30, 32, 29, 37, 36, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031480789184570312, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 26, 28, 29, 27, 31, 35, 30, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030498504638671875, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 28, 31, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 33, 31, 27, 38, 30, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 37, 30, 38, 26, 36, 31, 35, 33, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.003805875778198242, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 28, 35, 27, 29, 26, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.004032135009765625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 28, 31, 29, 30, 27, 37, 38, 26, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0033740997314453125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 28, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.005359172821044922, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 28, 29, 26, 30, 27, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.003264904022216797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008774757385253906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 27, 35, 38, 32, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.008131027221679688, "tests_passed": true, "error": null}}
{"selected_lines": [26, 31, 37, 30, 36, 35, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 31, 28, 33, 30, 37, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 26, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 26, 29, 37, 27, 28, 36, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003081083297729492, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 38, 27, 30, 31, 37, 32, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.002980947494506836, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031669139862060547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 27, 28, 30, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031151771545410156, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 29, 35, 30, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 32, 38, 35, 29, 37, 27, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 35, 28, 27, 26, 33, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 26, 32, 27, 29, 36, 28, 31, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode='rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 29, 31, 33, 35, 30, 36, 32, 37, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 28, 26, 37, 32, 33, 31, 36, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030558109283447266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 30, 38, 33, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.007937192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 30, 31, 26, 36, 32, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030951499938964844, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 38, 35, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open() as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 26, 32, 29, 38, 30, 36, 31, 33, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 31, 36, 26, 28, 27, 35, 30, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 38, 28, 32, 35, 36, 31, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.absolute())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 30, 38, 35, 31, 33, 29, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 27, 36, 29, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 29, 32, 26, 31, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # use file as key and hash as value\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0030689239501953125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 33, 29, 28, 35, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 33, 26, 30, 27, 36, 37, 38, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 26, 28, 37, 29, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003120899200439453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 26, 32, 38, 37, 29, 28, 35, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003041982650756836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 29, 37, 27, 28, 36, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003081083297729492, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 27, 33, 31, 28, 38, 32, 35, 37, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file.resolve()", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 29, 37, 32, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.003055095672607422, "tests_passed": true, "error": null}}
{"selected_lines": [26, 31, 32, 33, 29, 38, 30, 36, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 30, 27, 37, 28, 29, 32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open('rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28, 38, 27, 36, 33, 26, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008567094802856445, "tests_passed": true, "error": null}}
{"selected_lines": [28, 38, 29, 30, 37, 27, 31, 36, 33, 32, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(mode=\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the file\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 29, 37, 31, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010209083557128906, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 28, 37, 30, 35, 32, 38, 27, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=2)\n    return json_file<|endoftext|>from typing import List", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.005578756332397461, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [32, 29, 33, 28, 31, 38, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate SHA256 hash\n                hash_dict[str(file_path.resolve())] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 26, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0031752586364746094, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 33, 36, 26, 29, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path.name)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 31, 29, 30, 32, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # calculate hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 27, 30, 26], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0031087398529052734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 29, 33, 36, 30, 32, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # sha256 hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 37, 29, 27, 38, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33, 27, 29, 31, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 37, 29, 36, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open() as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 30, 32, 35, 29, 26, 31], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # generate hash using SHA256 algorithm\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0030341148376464844, "tests_passed": true, "error": null}}
{"selected_lines": [33, 26, 35, 32, 38, 36, 31, 28], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 36, 30, 28, 32, 27, 38, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 35, 37, 30, 29, 31, 32, 36, 28, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0010869503021240234, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 35, 36, 26, 28, 29, 32, 37, 38], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n    return json_file", "compilation_passed": true, "time": 0.0030930042266845703, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 32, 35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # SHA256 hash of the file content\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0035011768341064453, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 29, 38, 31, 28, 26, 33, 35, 36], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as file:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 38, 32, 27], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash bytes using SHA256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 30, 27, 36, 37, 31, 38, 29], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root, file)\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash  # store hash as key-value pair\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)<|endoftext|>from unittest.mock import patch", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 37, 28, 33], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 28, 37, 32, 31, 30], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with file_path.open(\"rb\") as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # hash the bytes using SHA-256\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.003416776657104492, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = Path(root) / file\n            with open(file_path, 'rb') as f:\n                bytes = f.read()  # read entire file as bytes\n                readable_hash = hashlib.sha256(bytes).hexdigest()\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return str(json_file)", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 32, 30, 29, 33, 26, 27, 38, 35, 37], "result": {"code": "import os\nimport hashlib\nimport json\nfrom pathlib import Path\n\ndef task_func(directory: str) -> str:\n    \"\"\"\n    Create SHA256 hashes for all files in the specified directory, including files in subdirectories, \n    and save these hashes in a JSON file named 'hashes.json' in the given directory.\n\n    Parameters:\n    - directory (str): The path to the directory containing files to be hashed.\n    \n    Returns:\n    str: The absolute path of the JSON file ('hashes.json') containing the hashes.\n    \n    Requirements:\n    - os\n    - hashlib\n    - json\n    - pathlib.Path\n\n    Example:\n    >>> json_file = task_func(\"/path/to/directory\")\n    >>> print(f\"Hashes saved at: {json_file}\")\n    \"\"\"\n    hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                bytes = f.read()\n                readable_hash = hashlib.sha256(bytes).hexdigest()  # convert to readable hash\n                hash_dict[str(file_path)] = readable_hash\n    # Save to JSON file\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, 'w') as outfile:\n        json.dump(hash_dict, f)\n    return json_file", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
