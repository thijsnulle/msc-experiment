{"selected_lines": [38, 36, 33, 26, 31, 37, 28, 35, 30, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 35, 33, 31, 38, 34, 37, 27, 36, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 31, 32, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 28, 38, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 37, 36, 31, 26, 33, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 33, 35, 34, 26, 37, 28, 27, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 35, 29, 28, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 37, 31, 29, 26, 34, 32, 38, 30, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 36, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 37, 27, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29, 35, 32, 34, 28, 33, 26, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 27, 29, 31, 32, 35, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 26, 34, 33, 35, 31, 29, 28, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 34, 32, 38, 35, 33, 29, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 29, 38, 32, 27, 36, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.017867088317871094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 28, 29, 30, 27, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 28, 29, 38, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 27, 38, 36, 32, 31, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 34, 32, 33, 27, 29, 35, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 30, 28, 33, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 27, 30, 35, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 37, 33, 32, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.005754232406616211, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 31, 32, 29, 37, 27, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 28, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 34, 30, 38, 28, 37, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.013644695281982422, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012453079223632812, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [30, 38, 28, 35, 32, 34, 26, 29, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 38, 34, 26, 37, 33, 35, 31, 28, 36, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 28, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 33, 32, 27, 35, 36, 26, 29, 37, 34, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 26, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0056989192962646484, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013578176498413086, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 34, 30, 26, 33, 32, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013578176498413086, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 28, 32, 36, 34, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 28, 29, 35, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 38, 37, 28, 26, 36, 32, 27, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 34, 33, 29, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 36, 37, 30, 31, 26, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 29, 28, 31, 35, 34, 33, 26, 32, 38, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 26, 31, 34, 30, 32, 29, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 31, 34, 32, 26, 36, 35, 38, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 28, 33, 27, 29, 37, 30, 35, 38, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [26, 33, 27, 30, 37, 32, 34, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 27, 33, 37, 26, 38, 32, 29, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 36, 31, 34, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013029813766479492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 36, 37, 35, 38, 31, 34, 30, 28, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 34, 28, 33, 29, 38, 32, 26, 31, 30, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 34, 30, 29, 33, 32, 26, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 33, 36, 27, 31, 38, 29, 32, 30, 28, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 27, 30, 29, 34, 31, 32, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 27, 34, 36, 37, 31, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 27, 38, 31, 35, 30, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 38, 29, 36, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 27, 38, 29, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 38, 31, 28, 30, 37, 26, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 29, 33, 34, 35, 31, 36, 30, 38, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 36, 29, 38, 28, 34, 35, 32, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 26, 36, 28, 27, 31, 29, 34, 37, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 34, 38, 32, 35, 28, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 27, 36, 32, 37, 31, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 32, 26, 34, 33, 30, 31, 27, 29, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012974023818969727, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [27, 38, 33, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 31, 36, 38, 26, 29, 27, 33, 34, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0126800537109375, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 27, 36, 29, 37, 34, 35, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 37, 33, 38, 30, 36, 32, 28, 35, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 36, 27, 26, 35, 37, 28, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 26, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 31, 37, 28, 26, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 38, 32, 27, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 28, 26, 34, 30, 36, 31, 38, 35, 29, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 28, 36, 27, 37, 38, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 26, 38, 29, 36, 35, 31, 28, 32, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 37, 38, 35, 26, 27, 34, 29, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 35, 32, 33, 34, 26, 28, 30, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": false, "time": 0.00024318695068359375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [27, 28, 31, 35, 29, 38, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 34, 32, 33, 27, 35, 31, 38, 29, 37, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 26, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 29, 36, 38, 30, 34, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32, 27, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38, 30, 37, 27, 36, 26, 28, 31, 33, 34, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 28, 38, 36, 34, 27, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 35, 36, 34, 31, 33, 32, 30, 37, 27, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 29, 34, 37, 27, 36, 28, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 26, 30, 34, 27, 37, 36, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 26, 36, 38, 32, 27, 35, 33, 31, 28, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34, 27, 26, 36, 37, 35, 29, 32, 31, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013029813766479492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 32, 33, 34, 35, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 33, 31, 29, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": false, "time": 0.00024318695068359375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 35, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 37, 33, 30, 35, 28, 31, 27, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 36, 31, 26, 37, 29, 32, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 29, 27, 35, 36, 30, 32, 31, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013229131698608398, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 29, 30, 34, 36, 32, 26, 27, 28, 35, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 35, 29, 36, 33, 34, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 32, 29, 36, 34, 27, 35, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 26, 30, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 28, 29, 35, 30, 32, 38, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 36, 31, 29, 34, 28, 32, 27, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 26, 38, 35, 30, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014574050903320312, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 35, 32, 29, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0126800537109375, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013578176498413086, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014574050903320312, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [34, 28, 26, 37, 38, 27, 30, 35, 31, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 33, 29, 27, 32, 31, 35, 38, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005550861358642578, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 32, 36, 26, 31, 29, 28, 35, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 31, 33, 28, 38, 32, 26, 30, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 38, 34, 35, 32, 30, 33, 29, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 26, 31, 38, 34, 29, 32, 33, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 36, 27, 37, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 37, 36, 28, 35, 34, 38, 29, 33, 27, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.013644695281982422, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31, 32, 27, 34, 28, 37, 38, 29, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 38, 31, 30, 34, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 27, 38, 32, 35, 31, 34, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 27, 35, 26, 33, 36, 31, 34, 30, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29, 30, 37, 31, 33, 26, 35, 36, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 26, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 27, 28, 26, 37, 34, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 28, 34, 35, 31, 32, 38, 26, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012991189956665039, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 28, 27, 31, 35, 32, 38, 26, 29, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012974023818969727, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012860774993896484, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 29, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 33, 27, 36, 28, 35, 26, 37, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 31, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0053980350494384766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 28, 31, 26, 32, 27, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0053730010986328125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 35, 31, 30, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 31, 37, 27, 29, 36, 38, 26, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 36, 30, 35, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30, 27, 32, 26, 37, 31, 33, 36, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 37, 38, 26, 32, 27, 36, 29, 33, 28, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012636899948120117, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 26, 27, 35, 29, 38, 31, 32, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 26, 35, 38, 32, 34, 30, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 27, 36, 26, 34, 33, 37, 35, 30, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 28, 32, 35, 33, 34, 26, 30, 27, 38, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 31, 36, 26, 37, 35, 33, 28, 30, 32, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 26, 38, 34, 28, 32, 35, 31, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 36, 28, 38, 29, 30, 26, 31, 32, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 26, 37, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 32, 38, 31, 30, 33, 37, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 32, 30, 38, 29, 26, 37, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 36, 38, 34, 27, 31, 37, 32, 29, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [26, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 27, 34, 26, 29, 36, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [27, 34, 37, 26, 29, 35, 31, 32, 38, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 31, 38, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 30, 34, 26, 28, 35, 38, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 26, 36, 30, 38, 33, 37, 27, 31, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 32, 28, 30, 35, 34, 33, 36, 27, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 35, 32, 27, 26, 30, 37, 36, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.016238927841186523, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 30, 31, 33, 36, 37, 38, 27, 26, 29, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 33, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 27, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 29, 28, 34, 30, 31, 38, 27, 35, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 28, 26, 32, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 28, 32, 38, 37, 31, 34, 33, 30, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 35, 38, 36, 32, 29, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 28, 32, 33, 36, 35, 34, 26, 29, 38, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 34, 31, 26, 38, 36, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 33, 29, 28, 31, 32, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014446020126342773, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 28, 32, 26, 35, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 36, 29, 32, 35, 37, 30, 31, 28, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 28, 27, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 28, 37, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 36, 29, 31, 37, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 28, 29, 27, 37, 30, 33, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 28, 36, 37, 30, 26, 31, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 28, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 32, 37, 30, 27, 38, 33, 26, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 35, 37, 31, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 28, 33, 27, 38, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 32, 28, 33, 35, 30, 34, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 28, 30, 36, 27, 37, 33, 32, 26, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013578176498413086, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014800071716308594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 36, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 38, 37, 32, 34, 31, 26, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 34, 28, 26, 27, 36, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 38, 28, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 38, 31, 35, 29, 37, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005594015121459961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 31, 27, 30, 36, 34, 32, 29, 28, 26, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 31, 33, 37, 32, 29, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 37, 29, 30, 26, 38, 35, 34, 27, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 26, 36, 32, 35, 30, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 32, 33, 30, 31, 34, 26, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 37, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014213085174560547, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26, 35, 32, 30, 34, 29, 31, 36, 28, 37, 33, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32, 26, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 35, 34, 30, 31, 32, 37, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 28, 27, 26, 37, 30, 38, 29, 33, 36, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 37, 29, 33, 35, 30, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 36, 31, 26, 33, 27, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 35, 32, 26, 29, 30, 28, 34, 37, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 27, 31, 26, 36, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 38, 37, 34, 31, 36, 33, 32, 29, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 32, 37, 31, 34, 29, 27, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 37, 35, 38, 34, 28, 31, 29, 30, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 31, 28, 38, 32, 37, 26, 33, 36, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 38, 29, 30, 26, 32, 37, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 37, 31, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34, 35, 26, 36, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 26, 29, 35, 34, 36, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013592243194580078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 28, 36, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 28, 29, 35, 38, 31, 32, 33, 34, 36, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 32, 27, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 29, 32, 38, 34, 30, 31, 26, 33, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 36, 35, 34, 38, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 26, 29, 30, 38, 32, 34, 27, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 29, 35, 32, 33, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0054399967193603516, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 29, 38, 32, 26, 28, 37, 30, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 38, 30, 35, 26, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38, 29, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 35, 33, 26, 34, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 28, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012860774993896484, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012860774993896484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 26, 29, 35, 28, 36, 33, 30, 38, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 34, 35, 36, 31, 38, 33, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 31, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 26, 36, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 33, 36, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 31, 29, 30, 27, 38, 26, 34, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 32, 30, 34, 31, 35, 29, 36, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 29, 28, 27, 36, 26, 30, 38, 32, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013786077499389648, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 28, 27, 26, 36, 31, 34, 30, 29, 38, 32, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 26, 35, 31, 34, 36, 28, 32, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30, 38, 27, 36, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 33, 29, 27, 32, 31, 35, 38, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005550861358642578, "tests_passed": true, "error": null}}
{"selected_lines": [38, 27, 36, 28, 33, 26, 30, 32, 35, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 37, 31, 33, 34, 26, 27, 35, 38, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 36, 35, 31, 34, 28, 30, 29, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 28, 26, 38, 36, 27, 35, 37, 31, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 26, 30, 32, 28, 33, 31, 36, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 35, 28, 30, 37, 27, 34, 26, 31, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 35, 34, 29, 26, 30, 31, 27, 37, 36, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 37, 30, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 27, 34, 26, 35, 31, 30, 33, 28, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 38, 33, 26, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013060808181762695, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 37, 31, 32, 28, 34, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 33, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 36, 37, 26, 35, 33, 31, 38, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.013644695281982422, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 27, 37, 30, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 27, 38, 33, 30, 32, 26, 36, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 34, 38, 27, 28, 32, 31, 29, 26, 30, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 26, 34, 37, 27, 38, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 28, 34, 38, 26, 36, 31, 29, 35, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 26, 28, 29, 35, 36, 31, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.028341054916381836, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 29, 30, 36, 33, 26, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 38, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 37, 33, 28, 26, 38, 32, 30, 35, 34, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 33, 38, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 26, 29, 33, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 30, 29, 33, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 28, 38, 31, 29, 26, 36, 35, 30, 34, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 34, 30, 26, 37, 36, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 26, 28, 38, 30, 35, 27, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 38, 26, 37, 34, 33, 36, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 35, 32, 27, 34, 33, 26, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35, 38, 31, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 26, 27, 37, 31, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 36, 28, 38, 29, 27, 30, 26, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 34, 38, 35, 30, 28, 37, 27, 36, 29, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 37, 26, 35, 31, 29, 27, 38, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 33, 36, 38, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 27, 28, 37, 35, 38, 26, 32, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 26, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 37, 28, 35, 27, 33, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 38, 34, 30, 33, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 38, 37, 34, 27, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 37, 27, 28, 32, 35, 29, 38, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 35, 31, 36, 34, 26, 30, 33, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 36, 33, 38, 32, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 32, 28, 35, 33, 31, 36, 34, 26, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 36, 32, 34, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 26, 36, 27, 33, 32, 35, 29, 38, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 28, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 29, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 26, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 28, 33, 38, 35, 36, 30, 26, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 27, 31, 29, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 34, 36, 28, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 37, 27, 32, 31, 26, 35, 28, 38, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 31, 32, 29, 27, 30, 35, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 34, 36, 26, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0126800537109375, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 27, 34, 35, 30, 26, 31, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 32, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 37, 31, 29, 30, 36, 27, 32, 33, 38, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 27, 26, 37, 32, 36, 29, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 29, 34, 36, 31, 35, 28, 38, 30, 32, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 37, 31, 38, 27, 32, 35, 30, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014574050903320312, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012636899948120117, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 29, 38, 36, 33, 27, 35, 31, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 27, 26, 37, 33, 36, 35, 30, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 30, 37, 27, 36, 35, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 33, 29, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 35, 26, 31, 36, 38, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 27, 33, 32, 29, 28, 35, 38, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 38, 31, 35, 29, 37, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005594015121459961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 27, 33, 35, 31, 29, 37, 26, 28, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 27, 30, 26, 34, 28, 35, 33, 32, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35, 36, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 36, 35, 31, 30, 34, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 28, 26, 35, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 29, 38, 28, 34, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 26, 30, 33, 32, 34, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 31, 27, 36, 37, 32, 34, 35, 26, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [31, 34, 26, 38, 36, 27, 35, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 28, 31, 33, 35, 29, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 31, 34, 35, 29, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [35, 28, 33, 26, 29, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013029813766479492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 26, 29, 35, 32, 33, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0054399967193603516, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 28, 35, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 33, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 35, 28, 34, 30, 36, 27, 37, 26, 33, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014574050903320312, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [34, 27, 28, 32, 38, 35, 36, 30, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014574050903320312, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [29, 28, 33, 35, 34, 26, 30, 32, 27, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [26, 36, 29, 35, 32, 34, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012453079223632812, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [38, 26, 36, 31, 27, 35, 37, 32, 28, 30, 29, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35, 29, 28, 34, 33, 37, 27, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 30, 34, 28, 31, 35, 27, 32, 26, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 32, 29, 37, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 37, 27, 35, 33, 29, 38, 31, 34, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0065059661865234375, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013329744338989258, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 29, 27, 37, 36, 26, 34, 28, 35, 32, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 38, 29, 37, 26, 31, 34, 32, 36, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 31, 32, 38, 27, 33, 28, 34, 30, 35, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 30, 27, 26, 36, 32, 37, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 38, 29, 37, 28, 31, 30, 27, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 30, 36, 38, 35, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 29, 32, 38, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 29, 30, 28, 36, 26, 33, 35, 32, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 29, 35, 32, 33, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0054399967193603516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 26, 30, 34, 33, 29, 32, 27, 35, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013229131698608398, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 37, 38, 35, 34, 28, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 35, 36, 26, 31, 29, 28, 37, 34, 32, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014213085174560547, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 26, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 33, 38, 28, 27, 29, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 30, 28, 34, 35, 38, 33, 26, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 33, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 38, 28, 31, 29, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 35, 34, 30, 28, 33, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 38, 29, 31, 33, 27, 32, 26, 35, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 38, 35, 36, 37, 34, 30, 28, 29, 33, 26, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [26, 37, 35, 27, 32, 28, 36, 31, 38, 29, 30, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37, 31, 32, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 26, 37, 28, 36, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 34, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 27, 35, 37, 32, 36, 38, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 27, 35, 36, 31, 33, 37, 29, 32, 26, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 28, 36, 33, 38, 31, 29, 37, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 35, 36, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 38, 30, 35, 37, 31, 27, 32, 34, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 36, 33, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 38, 26, 32, 29, 37, 33, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 28, 37, 33, 27, 31, 30, 32, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 37, 34, 26, 38, 30, 35, 32, 29, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 30, 27, 36, 28, 29, 31, 35, 38, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 27, 28, 31, 36, 33, 37, 32, 30, 34, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 31, 29, 26, 37, 28, 34, 27, 33, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 27, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [26, 32, 36, 31, 37, 34, 28, 35, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 27, 33, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 26, 37, 35, 33, 32, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 28, 35, 27, 37, 31, 36, 26, 30, 29, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [27, 37, 28, 31, 35, 30, 36, 34, 29, 26, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 38, 27, 29, 37, 34, 36, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013592243194580078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 27, 33, 38, 30, 34, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 30, 37, 28, 33, 36, 31, 34, 26, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 37, 31, 26, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 36, 29, 35, 28, 27, 26, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [27, 36, 35, 37, 38, 34, 33, 32, 31, 30, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 34, 29, 35, 30, 28, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 31, 27, 29, 34, 32, 26, 28, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 27, 36, 38, 31, 37, 34, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 26, 28, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 38, 36, 30, 27, 34, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 27, 34, 35, 26, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 31, 32, 33, 30, 37, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 38, 30, 26, 27, 36, 28, 29, 34, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 26, 37, 30, 32, 28, 27, 29, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 29, 35, 32, 33, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0054399967193603516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 36, 37, 29, 30, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 36, 32, 27, 28, 38, 30, 34, 31, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 38, 26, 35, 36, 34, 31, 37, 27, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 29, 35, 28, 31, 32, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 38, 29, 27, 35, 34, 37, 26, 33, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 29, 33, 30, 27, 38, 32, 37, 34, 31, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 33, 30, 29, 26, 34, 27, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 27, 29, 36, 26, 34, 35, 38, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 27, 30, 33, 38, 36, 29, 34, 26, 28, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 31, 29, 34, 33, 26, 38, 32, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.005496025085449219, "tests_passed": true, "error": null}}
{"selected_lines": [37, 27, 28, 33, 38, 35, 31, 36, 34, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 27, 29, 35, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 26, 32, 33, 38, 36, 37, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 38, 29, 35, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 30, 36, 31, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 30, 36, 35, 26, 34, 29, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 33, 29, 38, 27, 31, 30, 36, 37, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 28, 26, 35, 34, 32, 29, 27, 30, 33, 36, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 38, 26, 30, 36, 28, 27, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 34, 33, 36, 29, 30, 26, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 37, 35, 26, 29, 31, 30, 38, 32, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [27, 36, 29, 38, 28, 31, 33, 30, 37, 35, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 32, 30, 37, 29, 38, 28, 35, 36, 31, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.016238927841186523, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013786077499389648, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 31, 32, 34, 37, 28, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 34, 28, 37, 31, 27, 26, 32, 35, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013578176498413086, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36, 34, 31, 26, 29, 35, 27, 32, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 29, 32, 27, 30, 36, 33, 28, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 34, 37, 28, 26, 29, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 28, 30, 27, 38, 33, 29, 31, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 38, 35, 26, 36, 33, 37, 28, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 26, 34, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 29, 28, 37, 38, 26, 33, 30, 31, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 29, 30, 37, 36, 34, 27, 32, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 35, 34, 27, 33, 32, 29, 26, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 33, 34, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 33, 31, 37, 29, 32, 36, 27, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 36, 28, 35, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 32, 26, 30, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 30, 28, 33, 27, 36, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014629125595092773, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 29, 38, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 35, 34, 30, 32, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 38, 26, 29, 36, 31, 35, 28, 33, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 26, 37, 32, 27, 29, 30, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 38, 34, 29, 35, 32, 37, 26, 28, 27, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 36, 28, 33, 29, 35, 27, 30, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 29, 34, 35, 37, 26, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31, 33, 38, 29, 34, 35, 26, 28, 32, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 27, 28, 31, 29, 37, 30, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 27, 33, 35, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 28, 34, 27, 30, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 29, 30, 35, 34, 32, 38, 31, 33, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 26, 32, 31, 34, 37, 36, 29, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 32, 34, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014213085174560547, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012636899948120117, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.013644695281982422, "tests_passed": true, "error": null}}
{"selected_lines": [27, 38, 28, 32, 34, 36, 31, 26, 35, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 36, 38, 34, 30, 27, 31, 29, 26, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 36, 33, 31, 26, 34, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014213085174560547, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012974023818969727, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": false, "time": 0.00041103363037109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [35, 30, 38, 32, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013578176498413086, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 32, 38, 27, 33, 36, 26, 31, 34, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 28, 34, 30, 26, 38, 27, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 30, 28, 34, 31, 26, 33, 32, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 33, 29, 27, 32, 31, 35, 38, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005550861358642578, "tests_passed": true, "error": null}}
{"selected_lines": [27, 35, 36, 30, 38, 32, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 27, 33, 31, 32, 28, 34, 38, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 26, 29, 32, 38, 31, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 37, 28, 38, 32, 34, 35, 26, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 28, 36, 29, 30, 34, 31, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 36, 34, 27, 35, 32, 29, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 26, 34, 29, 38, 27, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 38, 36, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 29, 26, 31, 38, 28, 36, 33, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29, 28, 33, 26, 31, 38, 37, 30, 32, 27, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 37, 33, 35, 36, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 37, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 37, 34, 28, 35, 29, 33, 26, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 38, 32, 31, 37, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0054247379302978516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 28, 36, 38, 33, 29, 30, 37, 34, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 28, 38, 27, 36, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 36, 34, 33, 31, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 27, 35, 28, 34, 30, 37, 32, 31, 26, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013029813766479492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 30, 28, 33, 38, 36, 31, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 33, 38, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012991189956665039, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 27, 28, 36, 31, 26, 35, 32, 37, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 27, 38, 31, 36, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 33, 27, 29, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 38, 29, 27, 34, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 33, 28, 36, 37, 31, 35, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014800071716308594, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 26, 34, 30, 27, 33, 29, 38, 37, 28, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 36, 38, 32, 35, 31, 29, 30, 27, 34, 28, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 26, 38, 36, 37, 27, 34, 30, 28, 33, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 30, 28, 38, 29, 37, 26, 27, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 27, 37, 35, 29, 33, 28, 30, 36, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 37, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 26, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 38, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 31, 37, 32, 28, 27, 35, 38, 26, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 32, 34, 28, 27, 26, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.013836145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [26, 31, 27, 38, 34, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 37, 27, 36, 28, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [35, 37, 28, 38, 34, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 32, 36, 35, 38, 33, 37, 30, 28, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 34, 26, 30, 33, 36, 28, 38, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 33, 36, 34, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 26, 35, 29, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 38, 30, 33, 26, 31, 35, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 35, 37, 30, 36, 26, 28, 38, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 27, 34, 38, 37, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 35, 36, 29, 32, 31, 37, 38, 30, 28, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 34, 28, 32, 30, 31, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 27, 34, 29, 28, 26, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 36, 31, 35, 30, 37, 27, 38, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 35, 32, 31, 36, 28, 29, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32, 34, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 28, 29, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 31, 34, 29, 36, 30, 32, 37, 38, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 35, 30, 32, 36, 34, 27, 31, 33, 37, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 37, 36, 35, 34, 32, 30, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 29, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 32, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 30, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 27, 35, 26, 38, 36, 30, 28, 32, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 29, 36, 38, 26, 32, 31, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 36, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 38, 30, 29, 35, 31, 34, 36, 33, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 38, 36, 35, 26, 34, 33, 30, 32, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 36, 32, 28, 37, 31, 29, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 26, 34, 35, 32, 28, 30, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 38, 32, 27, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 34, 38, 26, 32, 27, 29, 35, 30, 36, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.016238927841186523, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 27, 35, 30, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 29, 35, 32, 33, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0054399967193603516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 37, 38, 26, 31, 29, 28, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 37, 35, 34, 30, 27, 26, 28, 38, 31, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 32, 30, 34, 36, 35, 31, 28, 37, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 37, 32, 36, 38, 30, 33, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 31, 32, 38, 36, 29, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 33, 27, 34, 32, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 33, 34, 31, 27, 29, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013029813766479492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 28, 35, 32, 29, 27, 26, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 31, 35, 38, 29, 30, 33, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014213085174560547, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 27, 26, 37, 31, 35, 28, 33, 29, 38, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 38, 32, 33, 31, 37, 35, 36, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 32, 36, 30, 29, 35, 27, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 30, 26, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0126800537109375, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 33, 35, 30, 28, 36, 27, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 29, 27, 28, 35, 26, 30, 36, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 32, 28, 38, 31, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 27, 33, 29, 38, 30, 26, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 36, 32, 37, 38, 29, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 31, 29, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 37, 33, 31, 38, 30, 26, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 29, 35, 32, 33, 28, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0054399967193603516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 34, 27, 26, 32, 28, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 37, 38, 34, 32, 26, 35, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 34, 28, 36, 29, 26, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 29, 33, 38, 35, 27, 32, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 27, 32, 37, 33, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 34, 37, 38, 36, 31, 35, 28, 30, 32, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013786077499389648, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 27, 34, 37, 38, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 38, 27, 32, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0052950382232666016, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38, 30, 33, 29, 27, 32, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 26, 27, 37, 28, 34, 30, 33, 29, 38, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 26, 30, 27, 33, 36, 34, 38, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 38, 35, 28, 33, 36, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 32, 36, 37, 34, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 36, 28, 37, 34, 31, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013406991958618164, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [31, 29, 26, 35, 37, 28, 36, 33, 32, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 38, 27, 33, 34, 30, 36, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 33, 26, 34, 31, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 31, 28, 33, 35, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 36, 32, 38, 30, 26, 27, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 27, 37, 33, 31, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 27, 38, 29, 28, 31, 34, 30, 36, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 28, 29, 34, 32, 36, 33, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 31, 32, 26, 34, 28, 36, 30, 29, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013592243194580078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 32, 33, 36, 29, 28, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.02009892463684082, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 37, 35, 31, 33, 29, 38, 28, 34, 26, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 26, 27, 28, 31, 32, 33, 30, 38, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 38, 31, 35, 29, 37, 30, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005594015121459961, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 31, 35, 32, 34, 38, 36, 33, 29, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 33, 34, 36, 32, 37, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 38, 27, 26, 28, 36, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 29, 28, 33, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 34, 29, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 34, 33, 30, 28, 36, 32, 38, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 33, 36, 35, 29, 34, 27, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 27, 29, 34, 37, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median([int(v) for v in value]))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 26, 32, 27, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 28, 37, 29, 30, 35, 32, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 29, 34, 33, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 38, 36, 28, 29, 30, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01313161849975586, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [38, 32, 28, 31, 35, 30, 37, 29, 33, 36, 26, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 37, 27, 35, 36, 32, 33, 38, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 36, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01522517204284668, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [26, 36, 29, 32, 38, 31, 28, 37, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 27, 26, 33, 35, 28, 32, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 26, 30, 37, 38, 34, 27, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 26, 34, 32, 37, 31, 30, 29, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014213085174560547, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36, 32, 37, 31, 34, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 35, 37, 29, 27, 34, 36, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 29, 37, 27, 34, 30, 36, 32, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 27, 36, 31, 28, 32, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 28, 36, 33, 38, 31, 26, 30, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 37, 36, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 26, 28, 32, 33, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 33, 28, 38, 31, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012860774993896484, "tests_passed": true, "error": null}}
{"selected_lines": [26, 33, 31, 37, 35, 38, 30, 36, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 34, 30, 28, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 28, 35, 27, 34, 30, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 38, 35, 26, 28, 36, 37, 31, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 34, 26, 29, 37, 36, 33, 38, 32, 28, 27, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 28, 36, 26, 34, 37, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = {}\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 35, 34, 33, 38, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 38, 31, 30, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 28, 35, 30, 34, 29, 26, 27, 36, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 32, 36, 28, 26, 31, 37, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 33, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 38, 32, 26, 30, 34, 35, 36, 29, 28, 33, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 38, 30, 36, 27, 31, 29, 34, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 32, 31, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 34, 26, 30, 27, 36, 33, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 36, 30, 33, 27, 26, 35, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 30, 32, 37, 27, 31, 34, 36, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 34, 28, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 26, 27, 32, 35, 30, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0057830810546875, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [37, 26, 38, 32, 29, 35, 33, 36, 31, 28, 30, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 26, 37, 32, 35, 38, 33, 36, 30, 34, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 31, 32, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 29, 27, 33, 32, 35, 36, 30, 31, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 38, 34, 35, 37, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 33, 34, 37, 30, 27, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 38, 30, 29, 35, 36, 34, 27, 28, 32, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.mean(value))\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 35, 26, 38, 27, 28, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 28, 32, 37, 36, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 37, 34, 31, 30, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(dict))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'], delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 34, 29, 26, 27, 33, 30, 35], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 26, 30, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.005658149719238281, "tests_passed": true, "error": null}}
{"selected_lines": [38, 26, 32, 27, 30, 29, 34, 36, 37, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 31, 36, 38, 37, 33, 26, 30, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 32, 26, 35, 33, 36, 28, 37, 27, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {'mean': 0, 'median': 0})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 26, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), restval='')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 27, 36, 32, 33, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 27, 34, 31, 35, 32, 38, 28, 37, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [27, 37, 26, 30, 32, 29, 36, 28, 34, 31, 33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(lambda: np.array([])))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 34, 27, 33, 28, 31, 36, 35, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as json_file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 36, 27, 32, 30, 34, 26], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [26, 27, 30, 33, 32, 38, 29, 35, 37, 31, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict(zip(stats.keys(), [{\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 36, 37, 38, 34, 33, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015555143356323242, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 37, 31, 26, 27, 30, 32, 34, 33, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: defaultdict(float))\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 35, 32, 37, 36, 33, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01380014419555664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014369964599609375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 31, 27, 37, 32, 38, 30, 28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35, 30, 28, 32, 37, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 30, 26, 29, 28, 27, 37], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, \"r\") as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [27, 36, 26, 32, 35, 38, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as input_file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = dict()\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.012860774993896484, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 37, 26, 32, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0053822994232177734, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {key: {\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 33, 35, 26, 34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 32, 26, 36, 34, 35, 27, 30, 38, 31, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as file:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=result.keys(), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 26, 28, 27, 32, 38, 33, 31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [33, 26, 30, 38, 28, 34, 36, 32, 35, 31, 37, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(lambda: {\"mean\": np.mean([]), \"median\": np.median([])})\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, result.keys())\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 35, 37, 33, 31, 38, 27], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.005434751510620117, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f, delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013592243194580078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 27, 29, 33, 28, 26, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.01438593864440918, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 34, 31, 29, 30, 26, 28, 37, 33, 27, 35, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as file:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.015188217163085938, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014800071716308594, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 33, 34, 35, 38, 30, 36, 28, 26, 29], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file) as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 26, 30, 27, 37, 32], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(dict)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=list(result.keys()), delimiter=',')\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, **values})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.014800071716308594, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 31, 36, 33, 27, 30], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.DictWriter(f, fieldnames=['key', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in stats.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return stats", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['field', 'mean', 'median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.013445854187011719, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36, 29, 30, 35, 34, 33, 31, 37, 26, 38], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(value)\n    result = {k: {'mean': np.mean(v), 'median': np.median(v)} for k, v in stats.items()}\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 29, 38, 32, 27, 34, 36], "result": {"code": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n\n# Constants\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\n    \n    Parameters:\n    - input_file (str): The input JSON file name.\n    - output_file (str): The output CSV file name.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n\n    Requirements:\n    - numpy\n    - collections\n    - json\n    - csv\n\n    Example:\n    >>> task_func('data.json', 'stats.csv')\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    stats = defaultdict(list)\n    for d in data:\n        for key, value in d.items():\n            stats[key].append(np.median(value))\n    result = {}\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=['Field', 'Mean', 'Median'])\n        writer.writeheader()\n        for key, values in result.items():\n            writer.writerow({'key': key, 'mean': values['mean'], 'median': values['median']})\n    return result", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
